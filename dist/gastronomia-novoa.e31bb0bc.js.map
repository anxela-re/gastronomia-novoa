{"version":3,"sources":["node_modules/aos/dist/aos.js","node_modules/@splidejs/splide/dist/js/splide.esm.js","footer.js","navbar.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["createFooter","footer","document","getElementById","appendChild","createContactoContainer","createSocialMenu","formContainer","copyrightContainer","containerCopyright","createElement","classList","add","par","innerHTML","enlaceReferences","textContent","href","containerForm","form","insertFormGroup","buttonSubmit","type","value","id","label","inputType","placeholder","required","containerFormGourp","labelEl","for","textarea","name","cols","rows","input","item","enlace","icon","containerSocial","list","items","forEach","i","classes","map","classItem","containerContacto","titulo","paragraph","svgLogo","createSVG","createNavbar","pageTitle","nav","enlaceMenu","onclick","querySelector","checked","lista","createItemList","append","ref","includes","documentURI","split","checkPosition","logos","getElementsByClassName","length","logo","positionFromTop","getBoundingClientRect","top","window","innerHeight","remove","categorias","cat","createPaginatorMar","offsetMarList","countMarList","marList","seeMoreMarBtn","offsetMarListEl","countMarListEl","children","addEventListener","style","display","disabled","createPaginatorTierra","offsetTierraList","countTierraList","tierraList","seeMoreTierraBtn","offsetTierraListEl","countTierraListEl","AOS","init","Splide","perPage","Math","floor","clientWidth","height","cover","breakpoins","gap","mount","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"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","file":"gastronomia-novoa.e31bb0bc.js","sourceRoot":"..","sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.AOS=t():e.AOS=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p=\"dist/\",t(0)}([function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r=n(1),a=(o(r),n(6)),u=o(a),c=n(7),s=o(c),f=n(8),d=o(f),l=n(9),p=o(l),m=n(10),b=o(m),v=n(11),y=o(v),g=n(14),h=o(g),w=[],k=!1,x={offset:120,delay:0,easing:\"ease\",duration:400,disable:!1,once:!1,startEvent:\"DOMContentLoaded\",throttleDelay:99,debounceDelay:50,disableMutationObserver:!1},j=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e&&(k=!0),k)return w=(0,y.default)(w,x),(0,b.default)(w,x.once),w},O=function(){w=(0,h.default)(),j()},M=function(){w.forEach(function(e,t){e.node.removeAttribute(\"data-aos\"),e.node.removeAttribute(\"data-aos-easing\"),e.node.removeAttribute(\"data-aos-duration\"),e.node.removeAttribute(\"data-aos-delay\")})},S=function(e){return e===!0||\"mobile\"===e&&p.default.mobile()||\"phone\"===e&&p.default.phone()||\"tablet\"===e&&p.default.tablet()||\"function\"==typeof e&&e()===!0},_=function(e){x=i(x,e),w=(0,h.default)();var t=document.all&&!window.atob;return S(x.disable)||t?M():(x.disableMutationObserver||d.default.isSupported()||(console.info('\\n      aos: MutationObserver is not supported on this browser,\\n      code mutations observing has been disabled.\\n      You may have to call \"refreshHard()\" by yourself.\\n    '),x.disableMutationObserver=!0),document.querySelector(\"body\").setAttribute(\"data-aos-easing\",x.easing),document.querySelector(\"body\").setAttribute(\"data-aos-duration\",x.duration),document.querySelector(\"body\").setAttribute(\"data-aos-delay\",x.delay),\"DOMContentLoaded\"===x.startEvent&&[\"complete\",\"interactive\"].indexOf(document.readyState)>-1?j(!0):\"load\"===x.startEvent?window.addEventListener(x.startEvent,function(){j(!0)}):document.addEventListener(x.startEvent,function(){j(!0)}),window.addEventListener(\"resize\",(0,s.default)(j,x.debounceDelay,!0)),window.addEventListener(\"orientationchange\",(0,s.default)(j,x.debounceDelay,!0)),window.addEventListener(\"scroll\",(0,u.default)(function(){(0,b.default)(w,x.once)},x.throttleDelay)),x.disableMutationObserver||d.default.ready(\"[data-aos]\",O),w)};e.exports={init:_,refresh:j,refreshHard:O}},function(e,t){},,,,,function(e,t){(function(t){\"use strict\";function n(e,t,n){function o(t){var n=b,o=v;return b=v=void 0,k=t,g=e.apply(o,n)}function r(e){return k=e,h=setTimeout(f,t),M?o(e):g}function a(e){var n=e-w,o=e-k,i=t-n;return S?j(i,y-o):i}function c(e){var n=e-w,o=e-k;return void 0===w||n>=t||n<0||S&&o>=y}function f(){var e=O();return c(e)?d(e):void(h=setTimeout(f,a(e)))}function d(e){return h=void 0,_&&b?o(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),k=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(O())}function m(){var e=O(),n=c(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(S)return h=setTimeout(f,t),o(w)}return void 0===h&&(h=setTimeout(f,t)),g}var b,v,y,g,h,w,k=0,M=!1,S=!1,_=!0;if(\"function\"!=typeof e)throw new TypeError(s);return t=u(t)||0,i(n)&&(M=!!n.leading,S=\"maxWait\"in n,y=S?x(u(n.maxWait)||0,t):y,_=\"trailing\"in n?!!n.trailing:_),m.cancel=l,m.flush=p,m}function o(e,t,o){var r=!0,a=!0;if(\"function\"!=typeof e)throw new TypeError(s);return i(o)&&(r=\"leading\"in o?!!o.leading:r,a=\"trailing\"in o?!!o.trailing:a),n(e,t,{leading:r,maxWait:t,trailing:a})}function i(e){var t=\"undefined\"==typeof e?\"undefined\":c(e);return!!e&&(\"object\"==t||\"function\"==t)}function r(e){return!!e&&\"object\"==(\"undefined\"==typeof e?\"undefined\":c(e))}function a(e){return\"symbol\"==(\"undefined\"==typeof e?\"undefined\":c(e))||r(e)&&k.call(e)==d}function u(e){if(\"number\"==typeof e)return e;if(a(e))return f;if(i(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=i(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(l,\"\");var n=m.test(e);return n||b.test(e)?v(e.slice(2),n?2:8):p.test(e)?f:+e}var c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},s=\"Expected a function\",f=NaN,d=\"[object Symbol]\",l=/^\\s+|\\s+$/g,p=/^[-+]0x[0-9a-f]+$/i,m=/^0b[01]+$/i,b=/^0o[0-7]+$/i,v=parseInt,y=\"object\"==(\"undefined\"==typeof t?\"undefined\":c(t))&&t&&t.Object===Object&&t,g=\"object\"==(\"undefined\"==typeof self?\"undefined\":c(self))&&self&&self.Object===Object&&self,h=y||g||Function(\"return this\")(),w=Object.prototype,k=w.toString,x=Math.max,j=Math.min,O=function(){return h.Date.now()};e.exports=o}).call(t,function(){return this}())},function(e,t){(function(t){\"use strict\";function n(e,t,n){function i(t){var n=b,o=v;return b=v=void 0,O=t,g=e.apply(o,n)}function r(e){return O=e,h=setTimeout(f,t),M?i(e):g}function u(e){var n=e-w,o=e-O,i=t-n;return S?x(i,y-o):i}function s(e){var n=e-w,o=e-O;return void 0===w||n>=t||n<0||S&&o>=y}function f(){var e=j();return s(e)?d(e):void(h=setTimeout(f,u(e)))}function d(e){return h=void 0,_&&b?i(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),O=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(j())}function m(){var e=j(),n=s(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(S)return h=setTimeout(f,t),i(w)}return void 0===h&&(h=setTimeout(f,t)),g}var b,v,y,g,h,w,O=0,M=!1,S=!1,_=!0;if(\"function\"!=typeof e)throw new TypeError(c);return t=a(t)||0,o(n)&&(M=!!n.leading,S=\"maxWait\"in n,y=S?k(a(n.maxWait)||0,t):y,_=\"trailing\"in n?!!n.trailing:_),m.cancel=l,m.flush=p,m}function o(e){var t=\"undefined\"==typeof e?\"undefined\":u(e);return!!e&&(\"object\"==t||\"function\"==t)}function i(e){return!!e&&\"object\"==(\"undefined\"==typeof e?\"undefined\":u(e))}function r(e){return\"symbol\"==(\"undefined\"==typeof e?\"undefined\":u(e))||i(e)&&w.call(e)==f}function a(e){if(\"number\"==typeof e)return e;if(r(e))return s;if(o(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=o(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(d,\"\");var n=p.test(e);return n||m.test(e)?b(e.slice(2),n?2:8):l.test(e)?s:+e}var u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},c=\"Expected a function\",s=NaN,f=\"[object Symbol]\",d=/^\\s+|\\s+$/g,l=/^[-+]0x[0-9a-f]+$/i,p=/^0b[01]+$/i,m=/^0o[0-7]+$/i,b=parseInt,v=\"object\"==(\"undefined\"==typeof t?\"undefined\":u(t))&&t&&t.Object===Object&&t,y=\"object\"==(\"undefined\"==typeof self?\"undefined\":u(self))&&self&&self.Object===Object&&self,g=v||y||Function(\"return this\")(),h=Object.prototype,w=h.toString,k=Math.max,x=Math.min,j=function(){return g.Date.now()};e.exports=n}).call(t,function(){return this}())},function(e,t){\"use strict\";function n(e){var t=void 0,o=void 0,i=void 0;for(t=0;t<e.length;t+=1){if(o=e[t],o.dataset&&o.dataset.aos)return!0;if(i=o.children&&n(o.children))return!0}return!1}function o(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}function i(){return!!o()}function r(e,t){var n=window.document,i=o(),r=new i(a);u=t,r.observe(n.documentElement,{childList:!0,subtree:!0,removedNodes:!0})}function a(e){e&&e.forEach(function(e){var t=Array.prototype.slice.call(e.addedNodes),o=Array.prototype.slice.call(e.removedNodes),i=t.concat(o);if(n(i))return u()})}Object.defineProperty(t,\"__esModule\",{value:!0});var u=function(){};t.default={isSupported:i,ready:r}},function(e,t){\"use strict\";function n(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(){return navigator.userAgent||navigator.vendor||window.opera||\"\"}Object.defineProperty(t,\"__esModule\",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),r=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,a=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,u=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,c=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,s=function(){function e(){n(this,e)}return i(e,[{key:\"phone\",value:function(){var e=o();return!(!r.test(e)&&!a.test(e.substr(0,4)))}},{key:\"mobile\",value:function(){var e=o();return!(!u.test(e)&&!c.test(e.substr(0,4)))}},{key:\"tablet\",value:function(){return this.mobile()&&!this.phone()}}]),e}();t.default=new s},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e,t,n){var o=e.node.getAttribute(\"data-aos-once\");t>e.position?e.node.classList.add(\"aos-animate\"):\"undefined\"!=typeof o&&(\"false\"===o||!n&&\"true\"!==o)&&e.node.classList.remove(\"aos-animate\")},o=function(e,t){var o=window.pageYOffset,i=window.innerHeight;e.forEach(function(e,r){n(e,i+o,t)})};t.default=o},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(12),r=o(i),a=function(e,t){return e.forEach(function(e,n){e.node.classList.add(\"aos-init\"),e.position=(0,r.default)(e.node,t.offset)}),e};t.default=a},function(e,t,n){\"use strict\";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(13),r=o(i),a=function(e,t){var n=0,o=0,i=window.innerHeight,a={offset:e.getAttribute(\"data-aos-offset\"),anchor:e.getAttribute(\"data-aos-anchor\"),anchorPlacement:e.getAttribute(\"data-aos-anchor-placement\")};switch(a.offset&&!isNaN(a.offset)&&(o=parseInt(a.offset)),a.anchor&&document.querySelectorAll(a.anchor)&&(e=document.querySelectorAll(a.anchor)[0]),n=(0,r.default)(e).top,a.anchorPlacement){case\"top-bottom\":break;case\"center-bottom\":n+=e.offsetHeight/2;break;case\"bottom-bottom\":n+=e.offsetHeight;break;case\"top-center\":n+=i/2;break;case\"bottom-center\":n+=i/2+e.offsetHeight;break;case\"center-center\":n+=i/2+e.offsetHeight/2;break;case\"top-top\":n+=i;break;case\"bottom-top\":n+=e.offsetHeight+i;break;case\"center-top\":n+=e.offsetHeight/2+i}return a.anchorPlacement||a.offset||isNaN(t)||(o=t),n+o};t.default=a},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){for(var t=0,n=0;e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop);)t+=e.offsetLeft-(\"BODY\"!=e.tagName?e.scrollLeft:0),n+=e.offsetTop-(\"BODY\"!=e.tagName?e.scrollTop:0),e=e.offsetParent;return{top:n,left:t}};t.default=n},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){return e=e||document.querySelectorAll(\"[data-aos]\"),Array.prototype.map.call(e,function(e){return{node:e}})};t.default=n}])});","/*!\r\n * Splide.js\r\n * Version  : 2.4.20\r\n * License  : MIT\r\n * Copyright: 2020 Naotoshi Fujita\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"Splide\"] = factory();\r\n\telse\r\n\t\troot[\"Splide\"] = factory();\r\n})(self, function() {\r\nreturn /******/ (() => { // webpackBootstrap\r\n/******/ \t\"use strict\";\r\n/******/ \tvar __webpack_modules__ = ({\r\n\r\n/***/ 311:\r\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\r\n\r\n// ESM COMPAT FLAG\r\n__webpack_require__.r(__webpack_exports__);\r\n\r\n// EXPORTS\r\n__webpack_require__.d(__webpack_exports__, {\r\n  \"default\": () => /* binding */ module_Splide\r\n});\r\n\r\n// NAMESPACE OBJECT: ./src/js/constants/states.js\r\nvar states_namespaceObject = {};\r\n__webpack_require__.r(states_namespaceObject);\r\n__webpack_require__.d(states_namespaceObject, {\r\n  \"CREATED\": () => CREATED,\r\n  \"DESTROYED\": () => DESTROYED,\r\n  \"IDLE\": () => IDLE,\r\n  \"MOUNTED\": () => MOUNTED,\r\n  \"MOVING\": () => MOVING\r\n});\r\n\r\n;// CONCATENATED MODULE: ./src/js/core/event.js\r\n/**\r\n * The function for providing an Event object simply managing events.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * The function for providing an Event object simply managing events.\r\n */\r\n/* harmony default export */ const core_event = (function () {\r\n  /**\r\n   * Store all event data.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  var data = [];\r\n  var Event = {\r\n    /**\r\n     * Subscribe the given event(s).\r\n     *\r\n     * @param {string}   events  - An event name. Use space to separate multiple events.\r\n     *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n     * @param {function} handler - A callback function.\r\n     * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n     * @param {Object}   options - Optional. Options for addEventListener.\r\n     */\r\n    on: function on(events, handler, elm, options) {\r\n      if (elm === void 0) {\r\n        elm = null;\r\n      }\r\n\r\n      if (options === void 0) {\r\n        options = {};\r\n      }\r\n\r\n      events.split(' ').forEach(function (event) {\r\n        if (elm) {\r\n          elm.addEventListener(event, handler, options);\r\n        }\r\n\r\n        data.push({\r\n          event: event,\r\n          handler: handler,\r\n          elm: elm,\r\n          options: options\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Unsubscribe the given event(s).\r\n     *\r\n     * @param {string}  events - A event name or names split by space.\r\n     * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n     */\r\n    off: function off(events, elm) {\r\n      if (elm === void 0) {\r\n        elm = null;\r\n      }\r\n\r\n      events.split(' ').forEach(function (event) {\r\n        data = data.filter(function (item) {\r\n          if (item && item.event === event && item.elm === elm) {\r\n            unsubscribe(item);\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Emit an event.\r\n     * This method is only for custom events.\r\n     *\r\n     * @param {string}  event - An event name.\r\n     * @param {*}       args  - Any number of arguments passed to handlers.\r\n     */\r\n    emit: function emit(event) {\r\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      data.forEach(function (item) {\r\n        if (!item.elm && item.event.split('.')[0] === event) {\r\n          item.handler.apply(item, args);\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Clear event data.\r\n     */\r\n    destroy: function destroy() {\r\n      data.forEach(unsubscribe);\r\n      data = [];\r\n    }\r\n  };\r\n  /**\r\n   * Remove the registered event listener.\r\n   *\r\n   * @param {Object} item - An object containing event data.\r\n   */\r\n\r\n  function unsubscribe(item) {\r\n    if (item.elm) {\r\n      item.elm.removeEventListener(item.event, item.handler, item.options);\r\n    }\r\n  }\r\n\r\n  return Event;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/core/state.js\r\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param {string|number} initialState - Provide the initial state value.\r\n */\r\n/* harmony default export */ const state = (function (initialState) {\r\n  /**\r\n   * Store the current state.\r\n   *\r\n   * @type {string|number}\r\n   */\r\n  var curr = initialState;\r\n  return {\r\n    /**\r\n     * Change state.\r\n     *\r\n     * @param {string|number} state - A new state.\r\n     */\r\n    set: function set(state) {\r\n      curr = state;\r\n    },\r\n\r\n    /**\r\n     * Verify if the current state is given one or not.\r\n     *\r\n     * @param {string|number} state - A state name to be verified.\r\n     *\r\n     * @return {boolean} - True if the current state is the given one.\r\n     */\r\n    is: function is(state) {\r\n      return state === curr;\r\n    }\r\n  };\r\n});\r\n;// CONCATENATED MODULE: ./src/js/utils/object.js\r\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\n\r\n/**\r\n * Some utility functions related with Object, supporting IE.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\nvar keys = Object.keys;\r\n/**\r\n * Iterate an object like Array.forEach.\r\n * IE doesn't support forEach of HTMLCollection.\r\n *\r\n * @param {Object}    obj       - An object.\r\n * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\r\n */\r\n\r\nfunction each(obj, callback) {\r\n  keys(obj).some(function (key, index) {\r\n    return callback(obj[key], key, index);\r\n  });\r\n}\r\n/**\r\n * Return values of the given object as an array.\r\n * IE doesn't support Object.values.\r\n *\r\n * @param {Object} obj - An object.\r\n *\r\n * @return {Array} - An array containing all values of the given object.\r\n */\r\n\r\nfunction values(obj) {\r\n  return keys(obj).map(function (key) {\r\n    return obj[key];\r\n  });\r\n}\r\n/**\r\n * Check if the given subject is object or not.\r\n *\r\n * @param {*} subject - A subject to be verified.\r\n *\r\n * @return {boolean} - True if object, false otherwise.\r\n */\r\n\r\nfunction isObject(subject) {\r\n  return typeof subject === 'object';\r\n}\r\n/**\r\n * Merge two objects deeply.\r\n *\r\n * @param {Object} to   - An object where \"from\" is merged.\r\n * @param {Object} from - An object merged to \"to\".\r\n *\r\n * @return {Object} - A merged object.\r\n */\r\n\r\nfunction merge(_ref, from) {\r\n  var to = _extends({}, _ref);\r\n\r\n  each(from, function (value, key) {\r\n    if (isObject(value)) {\r\n      if (!isObject(to[key])) {\r\n        to[key] = {};\r\n      }\r\n\r\n      to[key] = merge(to[key], value);\r\n    } else {\r\n      to[key] = value;\r\n    }\r\n  });\r\n  return to;\r\n}\r\n/**\r\n * Assign all properties \"from\" to \"to\" object.\r\n *\r\n * @param {Object} to   - An object where properties are assigned.\r\n * @param {Object} from - An object whose properties are assigned to \"to\".\r\n *\r\n * @return {Object} - An assigned object.\r\n */\r\n\r\nfunction object_assign(to, from) {\r\n  keys(from).forEach(function (key) {\r\n    if (!to[key]) {\r\n      Object.defineProperty(to, key, Object.getOwnPropertyDescriptor(from, key));\r\n    }\r\n  });\r\n  return to;\r\n}\r\n;// CONCATENATED MODULE: ./src/js/utils/utils.js\r\n/**\r\n * A package of some miscellaneous utility functions.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Convert the given value to array.\r\n *\r\n * @param {*} value - Any value.\r\n *\r\n * @return {*[]} - Array containing the given value.\r\n */\r\n\r\nfunction toArray(value) {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n/**\r\n * Check if the given value is between min and max.\r\n * Min will be returned when the value is less than min or max will do when greater than max.\r\n *\r\n * @param {number} value - A number to be checked.\r\n * @param {number} m1    - Minimum or maximum number.\r\n * @param {number} m2    - Maximum or minimum number.\r\n *\r\n * @return {number} - A value itself, min or max.\r\n */\r\n\r\nfunction between(value, m1, m2) {\r\n  return Math.min(Math.max(value, m1 > m2 ? m2 : m1), m1 > m2 ? m1 : m2);\r\n}\r\n/**\r\n * The sprintf method with minimum functionality.\r\n *\r\n * @param {string}       format       - The string format.\r\n * @param {string|Array} replacements - Replacements accepting multiple arguments.\r\n *\r\n * @returns {string} - Converted string.\r\n */\r\n\r\nfunction sprintf(format, replacements) {\r\n  var i = 0;\r\n  return format.replace(/%s/g, function () {\r\n    return toArray(replacements)[i++];\r\n  });\r\n}\r\n/**\r\n * Append px unit to the given subject if necessary.\r\n *\r\n * @param {number|string} value - A value that may not include an unit.\r\n *\r\n * @return {string} - If the value is string, return itself.\r\n *                    If number, do value + \"px\". An empty string, otherwise.\r\n */\r\n\r\nfunction unit(value) {\r\n  var type = typeof value;\r\n\r\n  if (type === 'number' && value > 0) {\r\n    return parseFloat(value) + 'px';\r\n  }\r\n\r\n  return type === 'string' ? value : '';\r\n}\r\n/**\r\n * Pad start with 0.\r\n *\r\n * @param {number} number - A number to be filled with 0.\r\n *\r\n * @return {string|number} - Padded number.\r\n */\r\n\r\nfunction pad(number) {\r\n  return number < 10 ? '0' + number : number;\r\n}\r\n/**\r\n * Convert the given value to pixel.\r\n *\r\n * @param {Element}       root  - Root element where a dummy div is appended.\r\n * @param {string|number} value - CSS value to be converted, such as 10rem.\r\n *\r\n * @return {number} - Pixel.\r\n */\r\n\r\nfunction toPixel(root, value) {\r\n  if (typeof value === 'string') {\r\n    var div = create('div', {});\r\n    applyStyle(div, {\r\n      position: 'absolute',\r\n      width: value\r\n    });\r\n    append(root, div);\r\n    value = div.clientWidth;\r\n    dom_remove(div);\r\n  }\r\n\r\n  return +value || 0;\r\n}\r\n;// CONCATENATED MODULE: ./src/js/utils/dom.js\r\n/**\r\n * Some utility functions related with DOM.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * Find the first element matching the given selector.\r\n * Be aware that all selectors after a space are ignored.\r\n *\r\n * @param {Element|Node}  elm       - An ancestor element.\r\n * @param {string}        selector  - DOMString.\r\n *\r\n * @return {Element|null} - A found element or null.\r\n */\r\n\r\nfunction find(elm, selector) {\r\n  return elm ? elm.querySelector(selector.split(' ')[0]) : null;\r\n}\r\n/**\r\n * Find a first child having the given tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element|undefined} - A found element on success or undefined on failure.\r\n */\r\n\r\nfunction child(parent, tagOrClassName) {\r\n  return children(parent, tagOrClassName)[0];\r\n}\r\n/**\r\n * Return chile elements that matches the provided tag or class name.\r\n *\r\n * @param {Element} parent         - A parent element.\r\n * @param {string}  tagOrClassName - A tag or class name.\r\n *\r\n * @return {Element[]} - Found elements.\r\n */\r\n\r\nfunction children(parent, tagOrClassName) {\r\n  if (parent) {\r\n    return values(parent.children).filter(function (child) {\r\n      return hasClass(child, tagOrClassName.split(' ')[0]) || child.tagName === tagOrClassName;\r\n    });\r\n  }\r\n\r\n  return [];\r\n}\r\n/**\r\n * Create an element with some optional attributes.\r\n *\r\n * @param {string} tag   - A tag name.\r\n * @param {Object} attrs - An object any attribute pairs of name and value.\r\n *\r\n * @return {Element} - A created element.\r\n */\r\n\r\nfunction create(tag, attrs) {\r\n  var elm = document.createElement(tag);\r\n  each(attrs, function (value, key) {\r\n    return setAttribute(elm, key, value);\r\n  });\r\n  return elm;\r\n}\r\n/**\r\n * Convert HTML string to DOM node.\r\n *\r\n * @param {string} html - HTML string.\r\n *\r\n * @return {Node} - A created node.\r\n */\r\n\r\nfunction domify(html) {\r\n  var div = create('div', {});\r\n  div.innerHTML = html;\r\n  return div.firstChild;\r\n}\r\n/**\r\n * Remove a given element from a DOM tree.\r\n *\r\n * @param {Element|Element[]} elms - Element(s) to be removed.\r\n */\r\n\r\nfunction dom_remove(elms) {\r\n  toArray(elms).forEach(function (elm) {\r\n    if (elm) {\r\n      var parent = elm.parentElement;\r\n      parent && parent.removeChild(elm);\r\n    }\r\n  });\r\n}\r\n/**\r\n * Append a child to a given element.\r\n *\r\n * @param {Element} parent - A parent element.\r\n * @param {Element} child  - An element to be appended.\r\n */\r\n\r\nfunction append(parent, child) {\r\n  if (parent) {\r\n    parent.appendChild(child);\r\n  }\r\n}\r\n/**\r\n * Insert an element before the reference element.\r\n *\r\n * @param {Element|Node} ref - A reference element.\r\n * @param {Element}      elm - An element to be inserted.\r\n */\r\n\r\nfunction before(elm, ref) {\r\n  if (elm && ref) {\r\n    var parent = ref.parentElement;\r\n    parent && parent.insertBefore(elm, ref);\r\n  }\r\n}\r\n/**\r\n * Apply styles to the given element.\r\n *\r\n * @param {Element} elm     - An element where styles are applied.\r\n * @param {Object}  styles  - Object containing styles.\r\n */\r\n\r\nfunction applyStyle(elm, styles) {\r\n  if (elm) {\r\n    each(styles, function (value, prop) {\r\n      if (value !== null) {\r\n        elm.style[prop] = value;\r\n      }\r\n    });\r\n  }\r\n}\r\n/**\r\n * Add or remove classes to/from the element.\r\n * This function is for internal usage.\r\n *\r\n * @param {Element}         elm     - An element where classes are added.\r\n * @param {string|string[]} classes - Class names being added.\r\n * @param {boolean}         remove  - Whether to remove or add classes.\r\n */\r\n\r\nfunction addOrRemoveClasses(elm, classes, remove) {\r\n  if (elm) {\r\n    toArray(classes).forEach(function (name) {\r\n      if (name) {\r\n        elm.classList[remove ? 'remove' : 'add'](name);\r\n      }\r\n    });\r\n  }\r\n}\r\n/**\r\n * Add classes to the element.\r\n *\r\n * @param {Element}          elm     - An element where classes are added.\r\n * @param {string|string[]}  classes - Class names being added.\r\n */\r\n\r\n\r\nfunction addClass(elm, classes) {\r\n  addOrRemoveClasses(elm, classes, false);\r\n}\r\n/**\r\n * Remove a class from the element.\r\n *\r\n * @param {Element}         elm     - An element where classes are removed.\r\n * @param {string|string[]} classes - A class name being removed.\r\n */\r\n\r\nfunction removeClass(elm, classes) {\r\n  addOrRemoveClasses(elm, classes, true);\r\n}\r\n/**\r\n * Verify if the provided element has the class or not.\r\n *\r\n * @param {Element} elm       - An element.\r\n * @param {string}  className - A class name.\r\n *\r\n * @return {boolean} - True if the element has the class or false if not.\r\n */\r\n\r\nfunction hasClass(elm, className) {\r\n  return !!elm && elm.classList.contains(className);\r\n}\r\n/**\r\n * Set attribute to the given element.\r\n *\r\n * @param {Element}                 elm   - An element where an attribute is assigned.\r\n * @param {string}                  name  - Attribute name.\r\n * @param {string|number|boolean}   value - Attribute value.\r\n */\r\n\r\nfunction setAttribute(elm, name, value) {\r\n  if (elm) {\r\n    elm.setAttribute(name, value);\r\n  }\r\n}\r\n/**\r\n * Get attribute from the given element.\r\n *\r\n * @param {Element} elm  - An element where an attribute is assigned.\r\n * @param {string}  name - Attribute name.\r\n *\r\n * @return {string} - The value of the given attribute if available. An empty string if not.\r\n */\r\n\r\nfunction getAttribute(elm, name) {\r\n  return elm ? elm.getAttribute(name) : '';\r\n}\r\n/**\r\n * Remove attribute from the given element.\r\n *\r\n * @param {Element|Element[]} elms  - An element where an attribute is removed.\r\n * @param {string|string[]}      names - Attribute name.\r\n */\r\n\r\nfunction removeAttribute(elms, names) {\r\n  toArray(names).forEach(function (name) {\r\n    toArray(elms).forEach(function (elm) {\r\n      return elm && elm.removeAttribute(name);\r\n    });\r\n  });\r\n}\r\n/**\r\n * Return the Rect object of the provided object.\r\n *\r\n * @param {Element} elm - An element.\r\n *\r\n * @return {ClientRect|DOMRect} - A rect object.\r\n */\r\n\r\nfunction getRect(elm) {\r\n  return elm.getBoundingClientRect();\r\n}\r\n/**\r\n * Trigger the given callback after all images contained by the element are loaded.\r\n *\r\n * @param {Element}  elm      - Element that may contain images.\r\n * @param {Function} callback - Callback function fired right after all images are loaded.\r\n */\r\n\r\nfunction loaded(elm, callback) {\r\n  var images = elm.querySelectorAll('img');\r\n  var length = images.length;\r\n\r\n  if (length) {\r\n    var count = 0;\r\n    each(images, function (img) {\r\n      img.onload = img.onerror = function () {\r\n        if (++count === length) {\r\n          callback();\r\n        }\r\n      };\r\n    });\r\n  } else {\r\n    // Trigger the callback immediately if there is no image.\r\n    callback();\r\n  }\r\n}\r\n;// CONCATENATED MODULE: ./src/js/constants/types.js\r\n/**\r\n * Export slider types.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Normal slider.\r\n *\r\n * @type {string}\r\n */\r\nvar SLIDE = 'slide';\r\n/**\r\n * Loop after the last slide and before the first one.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar LOOP = 'loop';\r\n/**\r\n * The track doesn't move.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar FADE = 'fade';\r\n;// CONCATENATED MODULE: ./src/js/transitions/slide/index.js\r\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * The component for general slide effect transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const slide = (function (Splide, Components) {\r\n  /**\r\n   * Hold the list element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n  var list;\r\n  /**\r\n   * Hold the onEnd callback function.\r\n   *\r\n   * @type {function}\r\n   */\r\n\r\n  var endCallback;\r\n  return {\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      list = Components.Elements.list;\r\n      Splide.on('transitionend', function (e) {\r\n        if (e.target === list && endCallback) {\r\n          endCallback();\r\n        }\r\n      }, list);\r\n    },\r\n\r\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}   destIndex - Destination slide index that might be clone's.\r\n     * @param {number}   newIndex  - New index.\r\n     * @param {number}   prevIndex - Previous index.\r\n     * @param {Object}   coord     - Destination coordinates.\r\n     * @param {function} done      - Callback function must be invoked when transition is completed.\r\n     */\r\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\r\n      var options = Splide.options;\r\n      var edgeIndex = Components.Controller.edgeIndex;\r\n      var speed = options.speed;\r\n      endCallback = done;\r\n\r\n      if (Splide.is(SLIDE)) {\r\n        if (prevIndex === 0 && newIndex >= edgeIndex || prevIndex >= edgeIndex && newIndex === 0) {\r\n          speed = options.rewindSpeed || speed;\r\n        }\r\n      }\r\n\r\n      applyStyle(list, {\r\n        transition: \"transform \" + speed + \"ms \" + options.easing,\r\n        transform: \"translate(\" + coord.x + \"px,\" + coord.y + \"px)\"\r\n      });\r\n    }\r\n  };\r\n});\r\n;// CONCATENATED MODULE: ./src/js/transitions/fade/index.js\r\n/**\r\n * The component for fade transition.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * The component for fade transition.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const fade = (function (Splide, Components) {\r\n  var Fade = {\r\n    /**\r\n     * Called when the component is mounted.\r\n     * Apply transition style to the first slide.\r\n     */\r\n    mount: function mount() {\r\n      apply(Splide.index);\r\n    },\r\n\r\n    /**\r\n     * Start transition.\r\n     *\r\n     * @param {number}    destIndex - Destination slide index that might be clone's.\r\n     * @param {number}    newIndex  - New index.\r\n     * @param {number}    prevIndex - Previous index.\r\n     * @param {Object}    coord     - Destination coordinates.\r\n     * @param {function}  done      - Callback function must be invoked when transition is completed.\r\n     */\r\n    start: function start(destIndex, newIndex, prevIndex, coord, done) {\r\n      var track = Components.Elements.track;\r\n      applyStyle(track, {\r\n        height: unit(track.clientHeight)\r\n      });\r\n      apply(newIndex);\r\n      setTimeout(function () {\r\n        done();\r\n        applyStyle(track, {\r\n          height: ''\r\n        });\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Apply transition style to the slide specified by the given index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\r\n\r\n  function apply(index) {\r\n    var options = Splide.options;\r\n    applyStyle(Components.Elements.slides[index], {\r\n      transition: \"opacity \" + options.speed + \"ms \" + options.easing\r\n    });\r\n  }\r\n\r\n  return Fade;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/transitions/index.js\r\n/**\r\n * Export transition components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/js/core/composer.js\r\n/**\r\n * Provide a function for composing components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * Compose components.\r\n *\r\n * @param {Splide}   Splide     - Splide instance.\r\n * @param {Object}   Components - Additional components.\r\n * @param {function} Transition - Change component for transition.\r\n *\r\n * @return {Object} - An object containing all components.\r\n */\r\n\r\nfunction compose(Splide, Components, Transition) {\r\n  var components = {};\r\n  each(Components, function (Component, name) {\r\n    components[name] = Component(Splide, components, name.toLowerCase());\r\n  });\r\n\r\n  if (!Transition) {\r\n    Transition = Splide.is(FADE) ? fade : slide;\r\n  }\r\n\r\n  components.Transition = Transition(Splide, components);\r\n  return components;\r\n}\r\n;// CONCATENATED MODULE: ./src/js/utils/error.js\r\n/**\r\n * Utility functions for outputting logs.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Prefix of an error massage.\r\n *\r\n * @type {string}\r\n */\r\nvar MESSAGE_PREFIX = '[SPLIDE]';\r\n/**\r\n * Display an error message on the browser console.\r\n *\r\n * @param {string} message - An error message.\r\n */\r\n\r\nfunction error(message) {\r\n  console.error(MESSAGE_PREFIX + \" \" + message);\r\n}\r\n/**\r\n * Check existence of the given object and throw an error if it doesn't.\r\n *\r\n * @throws {Error}\r\n *\r\n * @param {*}      subject - A subject to be confirmed.\r\n * @param {string} message - An error message.\r\n */\r\n\r\nfunction exist(subject, message) {\r\n  if (!subject) {\r\n    throw new Error(message);\r\n  }\r\n}\r\n;// CONCATENATED MODULE: ./src/js/constants/classes.js\r\n/**\r\n * Export class names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * A root class name.\r\n *\r\n * @type {string}\r\n */\r\nvar ROOT = 'splide';\r\n/**\r\n * The definition table of all classes for elements.\r\n * They might be modified by options.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvar ELEMENT_CLASSES = {\r\n  root: ROOT,\r\n  slider: ROOT + \"__slider\",\r\n  track: ROOT + \"__track\",\r\n  list: ROOT + \"__list\",\r\n  slide: ROOT + \"__slide\",\r\n  container: ROOT + \"__slide__container\",\r\n  arrows: ROOT + \"__arrows\",\r\n  arrow: ROOT + \"__arrow\",\r\n  prev: ROOT + \"__arrow--prev\",\r\n  next: ROOT + \"__arrow--next\",\r\n  pagination: ROOT + \"__pagination\",\r\n  page: ROOT + \"__pagination__page\",\r\n  clone: ROOT + \"__slide--clone\",\r\n  progress: ROOT + \"__progress\",\r\n  bar: ROOT + \"__progress__bar\",\r\n  autoplay: ROOT + \"__autoplay\",\r\n  play: ROOT + \"__play\",\r\n  pause: ROOT + \"__pause\",\r\n  spinner: ROOT + \"__spinner\",\r\n  sr: ROOT + \"__sr\"\r\n};\r\n/**\r\n * Definitions of status classes.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvar STATUS_CLASSES = {\r\n  active: 'is-active',\r\n  visible: 'is-visible',\r\n  loading: 'is-loading'\r\n};\r\n;// CONCATENATED MODULE: ./src/js/constants/i18n.js\r\n/**\r\n * Export i18n texts as object.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Texts for i18n.\r\n *\r\n * @type {Object}\r\n */\r\nvar I18N = {\r\n  prev: 'Previous slide',\r\n  next: 'Next slide',\r\n  first: 'Go to first slide',\r\n  last: 'Go to last slide',\r\n  slideX: 'Go to slide %s',\r\n  pageX: 'Go to page %s',\r\n  play: 'Start autoplay',\r\n  pause: 'Pause autoplay'\r\n};\r\n;// CONCATENATED MODULE: ./src/js/constants/defaults.js\r\n/**\r\n * Export default options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\nvar DEFAULTS = {\r\n  /**\r\n   * Determine a slider type.\r\n   * - 'slide': Regular slider.\r\n   * - 'loop' : Carousel slider.\r\n   * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\r\n   *\r\n   * @type {string}\r\n   */\r\n  type: 'slide',\r\n\r\n  /**\r\n   * Whether to rewind a slider before the first slide or after the last one.\r\n   * In \"loop\" mode, this option is ignored.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  rewind: false,\r\n\r\n  /**\r\n   * Transition speed in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\r\n  speed: 400,\r\n\r\n  /**\r\n   * Transition speed on rewind in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\r\n  rewindSpeed: 0,\r\n\r\n  /**\r\n   * Whether to prevent any actions while a slider is transitioning.\r\n   * If false, navigation, drag and swipe work while the slider is running.\r\n   * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  waitForTransition: true,\r\n\r\n  /**\r\n   * Define slider max width.\r\n   *\r\n   * @type {number}\r\n   */\r\n  width: 0,\r\n\r\n  /**\r\n   * Define slider height.\r\n   *\r\n   * @type {number}\r\n   */\r\n  height: 0,\r\n\r\n  /**\r\n   * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\r\n   * perPage number will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\r\n  fixedWidth: 0,\r\n\r\n  /**\r\n   * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\r\n   * heightRatio option will be ignored when this option is falsy.\r\n   *\r\n   * @type {number|string}\r\n   */\r\n  fixedHeight: 0,\r\n\r\n  /**\r\n   * Determine height of slides by ratio to a slider width.\r\n   * This will be ignored when the fixedHeight is provided.\r\n   *\r\n   * @type {number}\r\n   */\r\n  heightRatio: 0,\r\n\r\n  /**\r\n   * If true, slide width will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  autoWidth: false,\r\n\r\n  /**\r\n   * If true, slide height will be determined by the element width itself.\r\n   * - perPage/perMove should be 1.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  autoHeight: false,\r\n\r\n  /**\r\n   * Determine how many slides should be displayed per page.\r\n   *\r\n   * @type {number}\r\n   */\r\n  perPage: 1,\r\n\r\n  /**\r\n   * Determine how many slides should be moved when a slider goes to next or perv.\r\n   *\r\n   * @type {number}\r\n   */\r\n  perMove: 0,\r\n\r\n  /**\r\n   * Determine manually how many clones should be generated on the left and right side.\r\n   * The total number of clones will be twice of this number.\r\n   *\r\n   * @type {number}\r\n   */\r\n  clones: 0,\r\n\r\n  /**\r\n   * Start index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  start: 0,\r\n\r\n  /**\r\n   * Determine which slide should be focused if there are multiple slides in a page.\r\n   * A string \"center\" is acceptable for centering slides.\r\n   *\r\n   * @type {boolean|number|string}\r\n   */\r\n  focus: false,\r\n\r\n  /**\r\n   * Gap between slides. CSS format is allowed such as 1em.\r\n   *\r\n   * @type {number|string}\r\n   */\r\n  gap: 0,\r\n\r\n  /**\r\n   * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\r\n   * Give a single value to set a same size for both sides or\r\n   * do an object for different sizes.\r\n   * Also, CSS format is allowed such as 1em.\r\n   *\r\n   * @example\r\n   * - 10: Number\r\n   * - '1em': CSS format.\r\n   * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\r\n   * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\r\n   *\r\n   * @type {number|string|Object}\r\n   */\r\n  padding: 0,\r\n\r\n  /**\r\n   * Whether to append arrows.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  arrows: true,\r\n\r\n  /**\r\n   * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\r\n   *\r\n   * @type {string}\r\n   */\r\n  arrowPath: '',\r\n\r\n  /**\r\n   * Whether to append pagination(indicator dots) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  pagination: true,\r\n\r\n  /**\r\n   * Activate autoplay.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  autoplay: false,\r\n\r\n  /**\r\n   * Autoplay interval in milliseconds.\r\n   *\r\n   * @type {number}\r\n   */\r\n  interval: 5000,\r\n\r\n  /**\r\n   * Whether to stop autoplay when a slider is hovered.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  pauseOnHover: true,\r\n\r\n  /**\r\n   * Whether to stop autoplay when a slider elements are focused.\r\n   * True is recommended for accessibility.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  pauseOnFocus: true,\r\n\r\n  /**\r\n   * Whether to reset progress of the autoplay timer when resumed.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  resetProgress: true,\r\n\r\n  /**\r\n   * Loading images lazily.\r\n   * Image src must be provided by a data-splide-lazy attribute.\r\n   *\r\n   * - false: Do nothing.\r\n   * - 'nearby': Only images around an active slide will be loaded.\r\n   * - 'sequential': All images will be sequentially loaded.\r\n   *\r\n   * @type {boolean|string}\r\n   */\r\n  lazyLoad: false,\r\n\r\n  /**\r\n   * This option works only when a lazyLoad option is \"nearby\".\r\n   * Determine how many pages(not slides) around an active slide should be loaded beforehand.\r\n   *\r\n   * @type {number}\r\n   */\r\n  preloadPages: 1,\r\n\r\n  /**\r\n   * Easing for CSS transition. For example, linear, ease or cubic-bezier().\r\n   *\r\n   * @type {string}\r\n   */\r\n  easing: 'cubic-bezier(.42,.65,.27,.99)',\r\n\r\n  /**\r\n   * Whether to enable keyboard shortcuts\r\n   * - true or 'global': Listen to keydown event of the document.\r\n   * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\r\n   * - false: Disable keyboard shortcuts.\r\n   *\r\n   * @type {boolean|string}\r\n   */\r\n  keyboard: 'global',\r\n\r\n  /**\r\n   * Whether to allow mouse drag and touch swipe.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  drag: true,\r\n\r\n  /**\r\n   * The angle threshold for drag.\r\n   * The slider starts moving only when the drag angle is less than this threshold.\r\n   *\r\n   * @type {number}\r\n   */\r\n  dragAngleThreshold: 30,\r\n\r\n  /**\r\n   * Distance threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\r\n   *\r\n   * @type {number}\r\n   */\r\n  swipeDistanceThreshold: 150,\r\n\r\n  /**\r\n   * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\r\n   * Around 0.5 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\r\n  flickVelocityThreshold: .6,\r\n\r\n  /**\r\n   * Determine power of flick. The larger number this is, the farther a slider runs by flick.\r\n   * Around 500 is recommended.\r\n   *\r\n   * @type {number}\r\n   */\r\n  flickPower: 600,\r\n\r\n  /**\r\n   * Limit a number of pages to move by flick.\r\n   *\r\n   * @type {number}\r\n   */\r\n  flickMaxPages: 1,\r\n\r\n  /**\r\n   * Slider direction.\r\n   * - 'ltr': Left to right.\r\n   * - 'rtl': Right to left.\r\n   * - 'ttb': Top to bottom.\r\n   *\r\n   * @type {string}\r\n   */\r\n  direction: 'ltr',\r\n\r\n  /**\r\n   * Set img src to background-image of its parent element.\r\n   * Images with various sizes can be displayed as same dimension without cropping work.\r\n   * fixedHeight or heightRatio is required.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  cover: false,\r\n\r\n  /**\r\n   * Whether to enable accessibility(aria and screen reader texts) or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  accessibility: true,\r\n\r\n  /**\r\n   * Whether to add tabindex=\"0\" to visible slides or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  slideFocus: true,\r\n\r\n  /**\r\n   * Determine if a slider is navigation for another.\r\n   * Use \"sync\" API to synchronize two sliders.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  isNavigation: false,\r\n\r\n  /**\r\n   * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  trimSpace: true,\r\n\r\n  /**\r\n   * The \"is-active\" class is added after transition as default.\r\n   * If true, it will be added before move.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  updateOnMove: false,\r\n\r\n  /**\r\n   * Throttle duration in milliseconds for the resize event.\r\n   *\r\n   * @type {number}\r\n   */\r\n  throttle: 100,\r\n\r\n  /**\r\n   * Whether to destroy a slider or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  destroy: false,\r\n\r\n  /**\r\n   * Options for specific breakpoints.\r\n   *\r\n   * @example\r\n   * {\r\n   *   1000: {\r\n   *     perPage: 3,\r\n   *     gap: 20\r\n   *   },\r\n   *   600: {\r\n   *     perPage: 1,\r\n   *     gap: 5,\r\n   *   }\r\n   * }\r\n   *\r\n   * @type {boolean|Object}\r\n   */\r\n  breakpoints: false,\r\n\r\n  /**\r\n   * Collection of class names.\r\n   *\r\n   * @see ./classes.js\r\n   *\r\n   * @type {Object}\r\n   */\r\n  classes: ELEMENT_CLASSES,\r\n\r\n  /**\r\n   * Collection of i18n texts.\r\n   *\r\n   * @see ./i18n.js\r\n   *\r\n   * @type {Object}\r\n   */\r\n  i18n: I18N\r\n};\r\n;// CONCATENATED MODULE: ./src/js/constants/states.js\r\n/**\r\n * Export state constants.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Splide has been just created.\r\n *\r\n * @type {number}\r\n */\r\nvar CREATED = 1;\r\n/**\r\n * All components have been mounted and initialized.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar MOUNTED = 2;\r\n/**\r\n * Splide is ready for transition.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar IDLE = 3;\r\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar MOVING = 4;\r\n/**\r\n * Splide is moving.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar DESTROYED = 5;\r\n;// CONCATENATED MODULE: ./src/js/splide.js\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n/**\r\n * The main class for applying Splide to an element.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The main class for applying Splide to an element,\r\n * providing some APIs to control the behavior.\r\n */\r\n\r\nvar Splide = /*#__PURE__*/function () {\r\n  /**\r\n   * Splide constructor.\r\n   *\r\n   * @throws {Error} When the given root element or selector is invalid.\r\n   *\r\n   * @param {Element|string}  root       - A selector for a root element or an element itself.\r\n   * @param {Object}          options    - Optional. Options to change default behaviour.\r\n   * @param {Object}          Components - Optional. Components.\r\n   */\r\n  function Splide(root, options, Components) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (Components === void 0) {\r\n      Components = {};\r\n    }\r\n\r\n    this.root = root instanceof Element ? root : document.querySelector(root);\r\n    exist(this.root, 'An invalid element/selector was given.');\r\n    this.Components = null;\r\n    this.Event = core_event();\r\n    this.State = state(CREATED);\r\n    this.STATES = states_namespaceObject;\r\n    this._o = merge(DEFAULTS, options);\r\n    this._i = 0;\r\n    this._c = Components;\r\n    this._e = {}; // Extensions\r\n\r\n    this._t = null; // Transition\r\n  }\r\n  /**\r\n   * Compose and mount components.\r\n   *\r\n   * @param {Object}   Extensions - Optional. Additional components.\r\n   * @param {function} Transition - Optional. Set a custom transition component.\r\n   *\r\n   * @return {Splide|undefined} - This instance or undefined if an exception occurred.\r\n   */\r\n\r\n\r\n  var _proto = Splide.prototype;\r\n\r\n  _proto.mount = function mount(Extensions, Transition) {\r\n    var _this = this;\r\n\r\n    if (Extensions === void 0) {\r\n      Extensions = this._e;\r\n    }\r\n\r\n    if (Transition === void 0) {\r\n      Transition = this._t;\r\n    }\r\n\r\n    // Reset the state.\r\n    this.State.set(CREATED);\r\n    this._e = Extensions;\r\n    this._t = Transition;\r\n    this.Components = compose(this, merge(this._c, Extensions), Transition);\r\n\r\n    try {\r\n      each(this.Components, function (component, key) {\r\n        var required = component.required;\r\n\r\n        if (required === undefined || required) {\r\n          component.mount && component.mount();\r\n        } else {\r\n          delete _this.Components[key];\r\n        }\r\n      });\r\n    } catch (e) {\r\n      error(e.message);\r\n      return;\r\n    }\r\n\r\n    var State = this.State;\r\n    State.set(MOUNTED);\r\n    each(this.Components, function (component) {\r\n      component.mounted && component.mounted();\r\n    });\r\n    this.emit('mounted');\r\n    State.set(IDLE);\r\n    this.emit('ready');\r\n    applyStyle(this.root, {\r\n      visibility: 'visible'\r\n    });\r\n    this.on('move drag', function () {\r\n      return State.set(MOVING);\r\n    }).on('moved dragged', function () {\r\n      return State.set(IDLE);\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Set sync target.\r\n   *\r\n   * @param {Splide} splide - A Splide instance.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\r\n  ;\r\n\r\n  _proto.sync = function sync(splide) {\r\n    this.sibling = splide;\r\n    return this;\r\n  }\r\n  /**\r\n   * Register callback fired on the given event(s).\r\n   *\r\n   * @param {string}   events  - An event name. Use space to separate multiple events.\r\n   *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\r\n   * @param {function} handler - A callback function.\r\n   * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\r\n   * @param {Object}   options - Optional. Options for addEventListener.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\r\n  ;\r\n\r\n  _proto.on = function on(events, handler, elm, options) {\r\n    if (elm === void 0) {\r\n      elm = null;\r\n    }\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.Event.on(events, handler, elm, options);\r\n    return this;\r\n  }\r\n  /**\r\n   * Unsubscribe the given event.\r\n   *\r\n   * @param {string}  events - A event name.\r\n   * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\r\n   *\r\n   * @return {Splide} - This instance.\r\n   */\r\n  ;\r\n\r\n  _proto.off = function off(events, elm) {\r\n    if (elm === void 0) {\r\n      elm = null;\r\n    }\r\n\r\n    this.Event.off(events, elm);\r\n    return this;\r\n  }\r\n  /**\r\n   * Emit an event.\r\n   *\r\n   * @param {string} event - An event name.\r\n   * @param {*}      args  - Any number of arguments passed to handlers.\r\n   */\r\n  ;\r\n\r\n  _proto.emit = function emit(event) {\r\n    var _this$Event;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    (_this$Event = this.Event).emit.apply(_this$Event, [event].concat(args));\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Go to the slide specified by the given control.\r\n   *\r\n   * @param {string|number} control - A control pattern.\r\n   * @param {boolean}       wait    - Optional. Whether to wait for transition.\r\n   */\r\n  ;\r\n\r\n  _proto.go = function go(control, wait) {\r\n    if (wait === void 0) {\r\n      wait = this.options.waitForTransition;\r\n    }\r\n\r\n    if (this.State.is(IDLE) || this.State.is(MOVING) && !wait) {\r\n      this.Components.Controller.go(control, false);\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Verify whether the slider type is the given one or not.\r\n   *\r\n   * @param {string} type - A slider type.\r\n   *\r\n   * @return {boolean} - True if the slider type is the provided type or false if not.\r\n   */\r\n  ;\r\n\r\n  _proto.is = function is(type) {\r\n    return type === this._o.type;\r\n  }\r\n  /**\r\n   * Insert a slide.\r\n   *\r\n   * @param {Element|string} slide - A slide element to be added.\r\n   * @param {number}         index - A slide will be added at the position.\r\n   */\r\n  ;\r\n\r\n  _proto.add = function add(slide, index) {\r\n    if (index === void 0) {\r\n      index = -1;\r\n    }\r\n\r\n    this.Components.Elements.add(slide, index, this.refresh.bind(this));\r\n    return this;\r\n  }\r\n  /**\r\n   * Remove the slide designated by the index.\r\n   *\r\n   * @param {number} index - A slide index.\r\n   */\r\n  ;\r\n\r\n  _proto.remove = function remove(index) {\r\n    this.Components.Elements.remove(index);\r\n    this.refresh();\r\n    return this;\r\n  }\r\n  /**\r\n   * Destroy all Slide objects and clones and recreate them again.\r\n   */\r\n  ;\r\n\r\n  _proto.refresh = function refresh() {\r\n    this.emit('refresh:before').emit('refresh').emit('resize');\r\n    return this;\r\n  }\r\n  /**\r\n   * Destroy the Splide.\r\n   * \"Completely\" boolean is mainly for breakpoints.\r\n   *\r\n   * @param {boolean} completely - Destroy completely.\r\n   */\r\n  ;\r\n\r\n  _proto.destroy = function destroy(completely) {\r\n    var _this2 = this;\r\n\r\n    if (completely === void 0) {\r\n      completely = true;\r\n    }\r\n\r\n    // Postpone destroy because it should be done after mount.\r\n    if (this.State.is(CREATED)) {\r\n      this.on('ready', function () {\r\n        return _this2.destroy(completely);\r\n      });\r\n      return;\r\n    }\r\n\r\n    values(this.Components).reverse().forEach(function (component) {\r\n      component.destroy && component.destroy(completely);\r\n    });\r\n    this.emit('destroy', completely); // Destroy all event handlers, including ones for native events.\r\n\r\n    this.Event.destroy();\r\n    this.State.set(DESTROYED);\r\n    return this;\r\n  }\r\n  /**\r\n   * Return the current slide index.\r\n   *\r\n   * @return {number} - The current slide index.\r\n   // */\r\n  ;\r\n\r\n  _createClass(Splide, [{\r\n    key: \"index\",\r\n    get: function get() {\r\n      return this._i;\r\n    }\r\n    /**\r\n     * Set the current slide index.\r\n     *\r\n     * @param {number|string} index - A new index.\r\n     */\r\n    ,\r\n    set: function set(index) {\r\n      this._i = parseInt(index);\r\n    }\r\n    /**\r\n     * Return length of slides.\r\n     * This is an alias of Elements.length.\r\n     *\r\n     * @return {number} - A number of slides.\r\n     */\r\n\r\n  }, {\r\n    key: \"length\",\r\n    get: function get() {\r\n      return this.Components.Elements.length;\r\n    }\r\n    /**\r\n     * Return options.\r\n     *\r\n     * @return {Object} - Options object.\r\n     */\r\n\r\n  }, {\r\n    key: \"options\",\r\n    get: function get() {\r\n      return this._o;\r\n    }\r\n    /**\r\n     * Set options with merging the given object to the current one.\r\n     *\r\n     * @param {Object} options - New options.\r\n     */\r\n    ,\r\n    set: function set(options) {\r\n      var created = this.State.is(CREATED);\r\n\r\n      if (!created) {\r\n        this.emit('update');\r\n      }\r\n\r\n      this._o = merge(this._o, options);\r\n\r\n      if (!created) {\r\n        this.emit('updated', this._o);\r\n      }\r\n    }\r\n    /**\r\n     * Return the class list.\r\n     * This is an alias of Splide.options.classList.\r\n     *\r\n     * @return {Object} - An object containing all class list.\r\n     */\r\n\r\n  }, {\r\n    key: \"classes\",\r\n    get: function get() {\r\n      return this._o.classes;\r\n    }\r\n    /**\r\n     * Return the i18n strings.\r\n     * This is an alias of Splide.options.i18n.\r\n     *\r\n     * @return {Object} - An object containing all i18n strings.\r\n     */\r\n\r\n  }, {\r\n    key: \"i18n\",\r\n    get: function get() {\r\n      return this._o.i18n;\r\n    }\r\n  }]);\r\n\r\n  return Splide;\r\n}();\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/js/components/options/index.js\r\n/**\r\n * The component for initializing options.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * The component for initializing options.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const options = (function (Splide) {\r\n  /**\r\n   * Retrieve options from the data attribute.\r\n   * Note that IE10 doesn't support dataset property.\r\n   *\r\n   * @type {string}\r\n   */\r\n  var options = getAttribute(Splide.root, 'data-splide');\r\n\r\n  if (options) {\r\n    try {\r\n      Splide.options = JSON.parse(options);\r\n    } catch (e) {\r\n      error(e.message);\r\n    }\r\n  }\r\n\r\n  return {\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      if (Splide.State.is(CREATED)) {\r\n        Splide.index = Splide.options.start;\r\n      }\r\n    }\r\n  };\r\n});\r\n;// CONCATENATED MODULE: ./src/js/constants/directions.js\r\n/**\r\n * Export layout modes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Enumerate slides from left to right.\r\n *\r\n * @type {string}\r\n */\r\nvar LTR = 'ltr';\r\n/**\r\n * Enumerate slides from right to left.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar RTL = 'rtl';\r\n/**\r\n * Enumerate slides in a col.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar TTB = 'ttb';\r\n;// CONCATENATED MODULE: ./src/js/components/elements/slide.js\r\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Events for restoring original styles.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar STYLE_RESTORE_EVENTS = 'update.slide';\r\n/**\r\n * The sub component for handling each slide.\r\n *\r\n * @param {Splide}  Splide    - A Splide instance.\r\n * @param {number}  index     - An unique slide index.\r\n * @param {number}  realIndex - Clones should pass a real slide index.\r\n * @param {Element} slide     - A slide element.\r\n *\r\n * @return {Object} - The sub component object.\r\n */\r\n\r\n/* harmony default export */ const elements_slide = (function (Splide, index, realIndex, slide) {\r\n  /**\r\n   * Whether to update \"is-active\" class before or after transition.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  var updateOnMove = Splide.options.updateOnMove;\r\n  /**\r\n   * Events when the slide status is updated.\r\n   * Append a namespace to remove listeners later.\r\n   *\r\n   * @type {string}\r\n   */\r\n\r\n  var STATUS_UPDATE_EVENTS = 'ready.slide updated.slide resized.slide moved.slide' + (updateOnMove ? ' move.slide' : '');\r\n  /**\r\n   * Slide sub component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Slide = {\r\n    /**\r\n     * Slide element.\r\n     *\r\n     * @type {Element}\r\n     */\r\n    slide: slide,\r\n\r\n    /**\r\n     * Slide index.\r\n     *\r\n     * @type {number}\r\n     */\r\n    index: index,\r\n\r\n    /**\r\n     * Real index for clones.\r\n     *\r\n     * @type {number}\r\n     */\r\n    realIndex: realIndex,\r\n\r\n    /**\r\n     * Container element if available.\r\n     *\r\n     * @type {Element|undefined}\r\n     */\r\n    container: child(slide, Splide.classes.container),\r\n\r\n    /**\r\n     * Whether this is a cloned slide or not.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    isClone: realIndex > -1,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      var _this = this;\r\n\r\n      if (!this.isClone) {\r\n        slide.id = Splide.root.id + \"-slide\" + pad(index + 1);\r\n      }\r\n\r\n      Splide.on(STATUS_UPDATE_EVENTS, function () {\r\n        return _this.update();\r\n      }).on(STYLE_RESTORE_EVENTS, restoreStyles).on('click', function () {\r\n        return Splide.emit('click', _this);\r\n      }, slide);\r\n      /*\r\n       * Add \"is-active\" class to a clone element temporarily\r\n       * and it will be removed on \"moved\" event.\r\n       */\r\n\r\n      if (updateOnMove) {\r\n        Splide.on('move.slide', function (newIndex) {\r\n          if (newIndex === realIndex) {\r\n            _update(true, false);\r\n          }\r\n        });\r\n      } // Make sure the slide is shown.\r\n\r\n\r\n      applyStyle(slide, {\r\n        display: ''\r\n      }); // Hold the original styles.\r\n\r\n      this.styles = getAttribute(slide, 'style') || '';\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: function destroy() {\r\n      Splide.off(STATUS_UPDATE_EVENTS).off(STYLE_RESTORE_EVENTS).off('click', slide);\r\n      removeClass(slide, values(STATUS_CLASSES));\r\n      restoreStyles();\r\n      removeAttribute(this.container, 'style');\r\n    },\r\n\r\n    /**\r\n     * Update active and visible status.\r\n     */\r\n    update: function update() {\r\n      _update(this.isActive(), false);\r\n\r\n      _update(this.isVisible(), true);\r\n    },\r\n\r\n    /**\r\n     * Check whether this slide is active or not.\r\n     *\r\n     * @return {boolean} - True if the slide is active or false if not.\r\n     */\r\n    isActive: function isActive() {\r\n      return Splide.index === index;\r\n    },\r\n\r\n    /**\r\n     * Check whether this slide is visible in the viewport or not.\r\n     *\r\n     * @return {boolean} - True if the slide is visible or false if not.\r\n     */\r\n    isVisible: function isVisible() {\r\n      var active = this.isActive();\r\n\r\n      if (Splide.is(FADE) || active) {\r\n        return active;\r\n      }\r\n\r\n      var ceil = Math.ceil;\r\n      var trackRect = getRect(Splide.Components.Elements.track);\r\n      var slideRect = getRect(slide);\r\n\r\n      if (Splide.options.direction === TTB) {\r\n        return trackRect.top <= slideRect.top && slideRect.bottom <= ceil(trackRect.bottom);\r\n      }\r\n\r\n      return trackRect.left <= slideRect.left && slideRect.right <= ceil(trackRect.right);\r\n    },\r\n\r\n    /**\r\n     * Calculate how far this slide is from another slide and\r\n     * return true if the distance is within the given number.\r\n     *\r\n     * @param {number} from   - Index of a target slide.\r\n     * @param {number} within - True if the slide is within this number.\r\n     *\r\n     * @return {boolean} - True if the slide is within the number or false otherwise.\r\n     */\r\n    isWithin: function isWithin(from, within) {\r\n      var diff = Math.abs(from - index);\r\n\r\n      if (!Splide.is(SLIDE) && !this.isClone) {\r\n        diff = Math.min(diff, Splide.length - diff);\r\n      }\r\n\r\n      return diff < within;\r\n    }\r\n  };\r\n  /**\r\n   * Update classes for activity or visibility.\r\n   *\r\n   * @param {boolean} active        - Is active/visible or not.\r\n   * @param {boolean} forVisibility - Toggle classes for activity or visibility.\r\n   */\r\n\r\n  function _update(active, forVisibility) {\r\n    var type = forVisibility ? 'visible' : 'active';\r\n    var className = STATUS_CLASSES[type];\r\n\r\n    if (active) {\r\n      addClass(slide, className);\r\n      Splide.emit(\"\" + type, Slide);\r\n    } else {\r\n      if (hasClass(slide, className)) {\r\n        removeClass(slide, className);\r\n        Splide.emit(\"\" + (forVisibility ? 'hidden' : 'inactive'), Slide);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Restore the original styles.\r\n   */\r\n\r\n\r\n  function restoreStyles() {\r\n    setAttribute(slide, 'style', Slide.styles);\r\n  }\r\n\r\n  return Slide;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/elements/index.js\r\n/**\r\n * The component for main elements.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The property name for UID stored in a window object.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar UID_NAME = 'uid';\r\n/**\r\n * The component for main elements.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const components_elements = (function (Splide, Components) {\r\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n  var root = Splide.root;\r\n  /**\r\n   * Hold the class list.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var classes = Splide.classes;\r\n  /**\r\n   * Store Slide objects.\r\n   *\r\n   * @type {Array}\r\n   */\r\n\r\n  var Slides = [];\r\n  /*\r\n   * Assign unique ID to the root element if it doesn't have the one.\r\n   * Note that IE doesn't support padStart() to fill the uid by 0.\r\n   */\r\n\r\n  if (!root.id) {\r\n    window.splide = window.splide || {};\r\n    var uid = window.splide[UID_NAME] || 0;\r\n    window.splide[UID_NAME] = ++uid;\r\n    root.id = \"splide\" + pad(uid);\r\n  }\r\n  /**\r\n   * Elements component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n\r\n  var Elements = {\r\n    /**\r\n     * Called when the component is mounted.\r\n     * Collect main elements and store them as member properties.\r\n     */\r\n    mount: function mount() {\r\n      var _this = this;\r\n\r\n      this.init();\r\n      Splide.on('refresh', function () {\r\n        _this.destroy();\r\n\r\n        _this.init();\r\n      }).on('updated', function () {\r\n        removeClass(root, getClasses());\r\n        addClass(root, getClasses());\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: function destroy() {\r\n      Slides.forEach(function (Slide) {\r\n        Slide.destroy();\r\n      });\r\n      Slides = [];\r\n      removeClass(root, getClasses());\r\n    },\r\n\r\n    /**\r\n     * Initialization.\r\n     */\r\n    init: function init() {\r\n      var _this2 = this;\r\n\r\n      collect();\r\n      addClass(root, getClasses());\r\n      this.slides.forEach(function (slide, index) {\r\n        _this2.register(slide, index, -1);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Register a slide to create a Slide object and handle its behavior.\r\n     *\r\n     * @param {Element} slide     - A slide element.\r\n     * @param {number}  index     - A unique index. This can be negative.\r\n     * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\r\n     */\r\n    register: function register(slide, index, realIndex) {\r\n      var SlideObject = elements_slide(Splide, index, realIndex, slide);\r\n      SlideObject.mount();\r\n      Slides.push(SlideObject);\r\n    },\r\n\r\n    /**\r\n     * Return the Slide object designated by the index.\r\n     * Note that \"find\" is not supported by IE.\r\n     *\r\n     * @return {Object|undefined} - A Slide object if available. Undefined if not.\r\n     */\r\n    getSlide: function getSlide(index) {\r\n      return Slides.filter(function (Slide) {\r\n        return Slide.index === index;\r\n      })[0];\r\n    },\r\n\r\n    /**\r\n     * Return all Slide objects.\r\n     *\r\n     * @param {boolean} includeClones - Whether to include cloned slides or not.\r\n     *\r\n     * @return {Object[]} - Slide objects.\r\n     */\r\n    getSlides: function getSlides(includeClones) {\r\n      return includeClones ? Slides : Slides.filter(function (Slide) {\r\n        return !Slide.isClone;\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Return Slide objects belonging to the given page.\r\n     *\r\n     * @param {number} page - A page number.\r\n     *\r\n     * @return {Object[]} - An array containing Slide objects.\r\n     */\r\n    getSlidesByPage: function getSlidesByPage(page) {\r\n      var idx = Components.Controller.toIndex(page);\r\n      var options = Splide.options;\r\n      var max = options.focus !== false ? 1 : options.perPage;\r\n      return Slides.filter(function (_ref) {\r\n        var index = _ref.index;\r\n        return idx <= index && index < idx + max;\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Insert a slide to a slider.\r\n     * Need to refresh Splide after adding a slide.\r\n     *\r\n     * @param {Node|string} slide    - A slide element to be added.\r\n     * @param {number}      index    - A slide will be added at the position.\r\n     * @param {Function}    callback - Called right after the slide is added to the DOM tree.\r\n     */\r\n    add: function add(slide, index, callback) {\r\n      if (typeof slide === 'string') {\r\n        slide = domify(slide);\r\n      }\r\n\r\n      if (slide instanceof Element) {\r\n        var ref = this.slides[index]; // This will be removed in mount() of a Slide component.\r\n\r\n        applyStyle(slide, {\r\n          display: 'none'\r\n        });\r\n\r\n        if (ref) {\r\n          before(slide, ref);\r\n          this.slides.splice(index, 0, slide);\r\n        } else {\r\n          append(this.list, slide);\r\n          this.slides.push(slide);\r\n        }\r\n\r\n        loaded(slide, function () {\r\n          callback && callback(slide);\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove a slide from a slider.\r\n     * Need to refresh Splide after removing a slide.\r\n     *\r\n     * @param index - Slide index.\r\n     */\r\n    remove: function remove(index) {\r\n      dom_remove(this.slides.splice(index, 1)[0]);\r\n    },\r\n\r\n    /**\r\n     * Trigger the provided callback for each Slide object.\r\n     *\r\n     * @param {Function} callback - A callback function. The first argument will be the Slide object.\r\n     */\r\n    each: function each(callback) {\r\n      Slides.forEach(callback);\r\n    },\r\n\r\n    /**\r\n     * Return slides length without clones.\r\n     *\r\n     * @return {number} - Slide length.\r\n     */\r\n    get length() {\r\n      return this.slides.length;\r\n    },\r\n\r\n    /**\r\n     * Return \"SlideObjects\" length including clones.\r\n     *\r\n     * @return {number} - Slide length including clones.\r\n     */\r\n    get total() {\r\n      return Slides.length;\r\n    }\r\n\r\n  };\r\n  /**\r\n   * Collect elements.\r\n   */\r\n\r\n  function collect() {\r\n    Elements.slider = child(root, classes.slider);\r\n    Elements.track = find(root, \".\" + classes.track);\r\n    Elements.list = child(Elements.track, classes.list);\r\n    exist(Elements.track && Elements.list, 'Track or list was not found.');\r\n    Elements.slides = children(Elements.list, classes.slide);\r\n    var arrows = findParts(classes.arrows);\r\n    Elements.arrows = {\r\n      prev: find(arrows, \".\" + classes.prev),\r\n      next: find(arrows, \".\" + classes.next)\r\n    };\r\n    var autoplay = findParts(classes.autoplay);\r\n    Elements.bar = find(findParts(classes.progress), \".\" + classes.bar);\r\n    Elements.play = find(autoplay, \".\" + classes.play);\r\n    Elements.pause = find(autoplay, \".\" + classes.pause);\r\n    Elements.track.id = Elements.track.id || root.id + \"-track\";\r\n    Elements.list.id = Elements.list.id || root.id + \"-list\";\r\n  }\r\n  /**\r\n   * Return class names for the root element.\r\n   */\r\n\r\n\r\n  function getClasses() {\r\n    var rootClass = classes.root;\r\n    var options = Splide.options;\r\n    return [rootClass + \"--\" + options.type, rootClass + \"--\" + options.direction, options.drag ? rootClass + \"--draggable\" : '', options.isNavigation ? rootClass + \"--nav\" : '', STATUS_CLASSES.active];\r\n  }\r\n  /**\r\n   * Find parts only from children of the root or track.\r\n   *\r\n   * @return {Element} - A found element or undefined.\r\n   */\r\n\r\n\r\n  function findParts(className) {\r\n    return child(root, className) || child(Elements.slider, className);\r\n  }\r\n\r\n  return Elements;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/controller/index.js\r\n/**\r\n * The component for controlling the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\nvar floor = Math.floor;\r\n/**\r\n * The component for controlling the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const controller = (function (Splide, Components) {\r\n  /**\r\n   * Store current options.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  var options;\r\n  /**\r\n   * True if the slide is LOOP mode.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isLoop;\r\n  /**\r\n   * Controller component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Controller = {\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      options = Splide.options;\r\n      isLoop = Splide.is(LOOP);\r\n      bind();\r\n    },\r\n\r\n    /**\r\n     * Make track run by the given control.\r\n     * - \"+{i}\" : Increment the slide index by i.\r\n     * - \"-{i}\" : Decrement the slide index by i.\r\n     * - \"{i}\"  : Go to the slide whose index is i.\r\n     * - \">\"    : Go to next page.\r\n     * - \"<\"    : Go to prev page.\r\n     * - \">{i}\" : Go to page i.\r\n     *\r\n     * @param {string|number} control  - A control pattern.\r\n     * @param {boolean}       silently - Go to the destination without event emission.\r\n     */\r\n    go: function go(control, silently) {\r\n      var destIndex = this.trim(this.parse(control));\r\n      Components.Track.go(destIndex, this.rewind(destIndex), silently);\r\n    },\r\n\r\n    /**\r\n     * Parse the given control and return the destination index for the track.\r\n     *\r\n     * @param {string} control - A control target pattern.\r\n     *\r\n     * @return {number} - A parsed target.\r\n     */\r\n    parse: function parse(control) {\r\n      var index = Splide.index;\r\n      var matches = String(control).match(/([+\\-<>]+)(\\d+)?/);\r\n      var indicator = matches ? matches[1] : '';\r\n      var number = matches ? parseInt(matches[2]) : 0;\r\n\r\n      switch (indicator) {\r\n        case '+':\r\n          index += number || 1;\r\n          break;\r\n\r\n        case '-':\r\n          index -= number || 1;\r\n          break;\r\n\r\n        case '>':\r\n        case '<':\r\n          index = parsePage(number, index, indicator === '<');\r\n          break;\r\n\r\n        default:\r\n          index = parseInt(control);\r\n      }\r\n\r\n      return index;\r\n    },\r\n\r\n    /**\r\n     * Compute index from the given page number.\r\n     *\r\n     * @param {number} page - Page number.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\r\n    toIndex: function toIndex(page) {\r\n      if (hasFocus()) {\r\n        return page;\r\n      }\r\n\r\n      var length = Splide.length;\r\n      var perPage = options.perPage;\r\n      var index = page * perPage;\r\n      index = index - (this.pageLength * perPage - length) * floor(index / length); // Adjustment for the last page.\r\n\r\n      if (length - perPage <= index && index < length) {\r\n        index = length - perPage;\r\n      }\r\n\r\n      return index;\r\n    },\r\n\r\n    /**\r\n     * Compute page number from the given slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - A computed page number.\r\n     */\r\n    toPage: function toPage(index) {\r\n      if (hasFocus()) {\r\n        return index;\r\n      }\r\n\r\n      var length = Splide.length;\r\n      var perPage = options.perPage; // Make the last \"perPage\" number of slides belong to the last page.\r\n\r\n      if (length - perPage <= index && index < length) {\r\n        return floor((length - 1) / perPage);\r\n      }\r\n\r\n      return floor(index / perPage);\r\n    },\r\n\r\n    /**\r\n     * Trim the given index according to the current mode.\r\n     * Index being returned could be less than 0 or greater than the length in Loop mode.\r\n     *\r\n     * @param {number} index - An index being trimmed.\r\n     *\r\n     * @return {number} - A trimmed index.\r\n     */\r\n    trim: function trim(index) {\r\n      if (!isLoop) {\r\n        index = options.rewind ? this.rewind(index) : between(index, 0, this.edgeIndex);\r\n      }\r\n\r\n      return index;\r\n    },\r\n\r\n    /**\r\n     * Rewind the given index if it's out of range.\r\n     *\r\n     * @param {number} index - An index.\r\n     *\r\n     * @return {number} - A rewound index.\r\n     */\r\n    rewind: function rewind(index) {\r\n      var edge = this.edgeIndex;\r\n\r\n      if (isLoop) {\r\n        while (index > edge) {\r\n          index -= edge + 1;\r\n        }\r\n\r\n        while (index < 0) {\r\n          index += edge + 1;\r\n        }\r\n      } else {\r\n        if (index > edge) {\r\n          index = 0;\r\n        } else if (index < 0) {\r\n          index = edge;\r\n        }\r\n      }\r\n\r\n      return index;\r\n    },\r\n\r\n    /**\r\n     * Check if the direction is \"rtl\" or not.\r\n     *\r\n     * @return {boolean} - True if \"rtl\" or false if not.\r\n     */\r\n    isRtl: function isRtl() {\r\n      return options.direction === RTL;\r\n    },\r\n\r\n    /**\r\n     * Return the page length.\r\n     *\r\n     * @return {number} - Max page number.\r\n     */\r\n    get pageLength() {\r\n      var length = Splide.length;\r\n      return hasFocus() ? length : Math.ceil(length / options.perPage);\r\n    },\r\n\r\n    /**\r\n     * Return the edge index.\r\n     *\r\n     * @return {number} - Edge index.\r\n     */\r\n    get edgeIndex() {\r\n      var length = Splide.length;\r\n\r\n      if (!length) {\r\n        return 0;\r\n      }\r\n\r\n      if (hasFocus() || options.isNavigation || isLoop) {\r\n        return length - 1;\r\n      }\r\n\r\n      return length - options.perPage;\r\n    },\r\n\r\n    /**\r\n     * Return the index of the previous slide.\r\n     *\r\n     * @return {number} - The index of the previous slide if available. -1 otherwise.\r\n     */\r\n    get prevIndex() {\r\n      var prev = Splide.index - 1;\r\n\r\n      if (isLoop || options.rewind) {\r\n        prev = this.rewind(prev);\r\n      }\r\n\r\n      return prev > -1 ? prev : -1;\r\n    },\r\n\r\n    /**\r\n     * Return the index of the next slide.\r\n     *\r\n     * @return {number} - The index of the next slide if available. -1 otherwise.\r\n     */\r\n    get nextIndex() {\r\n      var next = Splide.index + 1;\r\n\r\n      if (isLoop || options.rewind) {\r\n        next = this.rewind(next);\r\n      }\r\n\r\n      return Splide.index < next && next <= this.edgeIndex || next === 0 ? next : -1;\r\n    }\r\n\r\n  };\r\n  /**\r\n   * Listen to some events.\r\n   */\r\n\r\n  function bind() {\r\n    Splide.on('move', function (newIndex) {\r\n      Splide.index = newIndex;\r\n    }).on('updated refresh', function (newOptions) {\r\n      options = newOptions || options;\r\n      Splide.index = between(Splide.index, 0, Controller.edgeIndex);\r\n    });\r\n  }\r\n  /**\r\n   * Verify if the focus option is available or not.\r\n   *\r\n   * @return {boolean} - True if a slider has the focus option.\r\n   */\r\n\r\n\r\n  function hasFocus() {\r\n    return options.focus !== false;\r\n  }\r\n  /**\r\n   * Return the next or previous page index computed by the page number and current index.\r\n   *\r\n   * @param {number}  number - Specify the page number.\r\n   * @param {number}  index  - Current index.\r\n   * @param {boolean} prev   - Prev or next.\r\n   *\r\n   * @return {number} - Slide index.\r\n   */\r\n\r\n\r\n  function parsePage(number, index, prev) {\r\n    if (number > -1) {\r\n      return Controller.toIndex(number);\r\n    }\r\n\r\n    var perMove = options.perMove;\r\n    var sign = prev ? -1 : 1;\r\n\r\n    if (perMove) {\r\n      return index + perMove * sign;\r\n    }\r\n\r\n    return Controller.toIndex(Controller.toPage(index) + sign);\r\n  }\r\n\r\n  return Controller;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/track/index.js\r\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nvar abs = Math.abs;\r\n/**\r\n * The component for moving list in the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const track = (function (Splide, Components) {\r\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  var Layout;\r\n  /**\r\n   * Hold the Layout component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Elements;\r\n  /**\r\n   * Store the list element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var list;\r\n  /**\r\n   * Whether the current direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isVertical = Splide.options.direction === TTB;\r\n  /**\r\n   * Whether the slider type is FADE or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isFade = Splide.is(FADE);\r\n  /**\r\n   * Whether the slider direction is RTL or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isRTL = Splide.options.direction === RTL;\r\n  /**\r\n   * This will be true while transitioning from the last index to the first one.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isLoopPending = false;\r\n  /**\r\n   * Sign for the direction. Only RTL mode uses the positive sign.\r\n   *\r\n   * @type {number}\r\n   */\r\n\r\n  var sign = isRTL ? 1 : -1;\r\n  /**\r\n   * Track component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Track = {\r\n    /**\r\n     * Make public the sign defined locally.\r\n     *\r\n     * @type {number}\r\n     */\r\n    sign: sign,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      Elements = Components.Elements;\r\n      Layout = Components.Layout;\r\n      list = Elements.list;\r\n    },\r\n\r\n    /**\r\n     * Called after the component is mounted.\r\n     * The resize event must be registered after the Layout's one is done.\r\n     */\r\n    mounted: function mounted() {\r\n      var _this = this;\r\n\r\n      if (!isFade) {\r\n        this.jump(0);\r\n        Splide.on('mounted resize updated', function () {\r\n          _this.jump(Splide.index);\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Go to the given destination index.\r\n     * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\r\n     *\r\n     * @param {number}  destIndex - A destination index.\r\n     *                              This can be negative or greater than slides length for reaching clones.\r\n     * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\r\n     * @param {boolean} silently  - If true, suppress emitting events.\r\n     */\r\n    go: function go(destIndex, newIndex, silently) {\r\n      var newPosition = getTrimmedPosition(destIndex);\r\n      var prevIndex = Splide.index; // Prevent any actions while transitioning from the last index to the first one for jump.\r\n\r\n      if (Splide.State.is(MOVING) && isLoopPending) {\r\n        return;\r\n      }\r\n\r\n      isLoopPending = destIndex !== newIndex;\r\n\r\n      if (!silently) {\r\n        Splide.emit('move', newIndex, prevIndex, destIndex);\r\n      }\r\n\r\n      if (Math.abs(newPosition - this.position) >= 1 || isFade) {\r\n        Components.Transition.start(destIndex, newIndex, prevIndex, this.toCoord(newPosition), function () {\r\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\r\n        });\r\n      } else {\r\n        if (destIndex !== prevIndex && Splide.options.trimSpace === 'move') {\r\n          Components.Controller.go(destIndex + destIndex - prevIndex, silently);\r\n        } else {\r\n          onTransitionEnd(destIndex, newIndex, prevIndex, silently);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Move the track to the specified index.\r\n     *\r\n     * @param {number} index - A destination index where the track jumps.\r\n     */\r\n    jump: function jump(index) {\r\n      this.translate(getTrimmedPosition(index));\r\n    },\r\n\r\n    /**\r\n     * Set the list position by CSS translate property.\r\n     *\r\n     * @param {number} position - A new position value.\r\n     */\r\n    translate: function translate(position) {\r\n      applyStyle(list, {\r\n        transform: \"translate\" + (isVertical ? 'Y' : 'X') + \"(\" + position + \"px)\"\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Cancel the transition and set the list position.\r\n     * Also, loop the slider if necessary.\r\n     */\r\n    cancel: function cancel() {\r\n      if (Splide.is(LOOP)) {\r\n        this.shift();\r\n      } else {\r\n        // Ensure the current position.\r\n        this.translate(this.position);\r\n      }\r\n\r\n      applyStyle(list, {\r\n        transition: ''\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Shift the slider if it exceeds borders on the edge.\r\n     */\r\n    shift: function shift() {\r\n      var position = abs(this.position);\r\n      var left = abs(this.toPosition(0));\r\n      var right = abs(this.toPosition(Splide.length));\r\n      var innerSize = right - left;\r\n\r\n      if (position < left) {\r\n        position += innerSize;\r\n      } else if (position > right) {\r\n        position -= innerSize;\r\n      }\r\n\r\n      this.translate(sign * position);\r\n    },\r\n\r\n    /**\r\n     * Trim redundant spaces on the left or right edge if necessary.\r\n     *\r\n     * @param {number} position - Position value to be trimmed.\r\n     *\r\n     * @return {number} - Trimmed position.\r\n     */\r\n    trim: function trim(position) {\r\n      if (!Splide.options.trimSpace || Splide.is(LOOP)) {\r\n        return position;\r\n      }\r\n\r\n      var edge = sign * (Layout.totalSize() - Layout.size - Layout.gap);\r\n      return between(position, edge, 0);\r\n    },\r\n\r\n    /**\r\n     * Calculate the closest slide index from the given position.\r\n     *\r\n     * @param {number} position - A position converted to an slide index.\r\n     *\r\n     * @return {number} - The closest slide index.\r\n     */\r\n    toIndex: function toIndex(position) {\r\n      var _this2 = this;\r\n\r\n      var index = 0;\r\n      var minDistance = Infinity;\r\n      Elements.getSlides(true).forEach(function (Slide) {\r\n        var slideIndex = Slide.index;\r\n        var distance = abs(_this2.toPosition(slideIndex) - position);\r\n\r\n        if (distance < minDistance) {\r\n          minDistance = distance;\r\n          index = slideIndex;\r\n        }\r\n      });\r\n      return index;\r\n    },\r\n\r\n    /**\r\n     * Return coordinates object by the given position.\r\n     *\r\n     * @param {number} position - A position value.\r\n     *\r\n     * @return {Object} - A coordinates object.\r\n     */\r\n    toCoord: function toCoord(position) {\r\n      return {\r\n        x: isVertical ? 0 : position,\r\n        y: isVertical ? position : 0\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Calculate the track position by a slide index.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {Object} - Calculated position.\r\n     */\r\n    toPosition: function toPosition(index) {\r\n      var position = Layout.totalSize(index) - Layout.slideSize(index) - Layout.gap;\r\n      return sign * (position + this.offset(index));\r\n    },\r\n\r\n    /**\r\n     * Return the current offset value, considering direction.\r\n     *\r\n     * @return {number} - Offset amount.\r\n     */\r\n    offset: function offset(index) {\r\n      var focus = Splide.options.focus;\r\n      var slideSize = Layout.slideSize(index);\r\n\r\n      if (focus === 'center') {\r\n        return -(Layout.size - slideSize) / 2;\r\n      }\r\n\r\n      return -(parseInt(focus) || 0) * (slideSize + Layout.gap);\r\n    },\r\n\r\n    /**\r\n     * Return the current position.\r\n     * This returns the correct position even while transitioning by CSS.\r\n     *\r\n     * @return {number} - Current position.\r\n     */\r\n    get position() {\r\n      var prop = isVertical ? 'top' : isRTL ? 'right' : 'left';\r\n      return getRect(list)[prop] - (getRect(Elements.track)[prop] - Layout.padding[prop] * sign);\r\n    }\r\n\r\n  };\r\n  /**\r\n   * Called whenever slides arrive at a destination.\r\n   *\r\n   * @param {number}  destIndex - A destination index.\r\n   * @param {number}  newIndex  - A new index.\r\n   * @param {number}  prevIndex - A previous index.\r\n   * @param {boolean} silently  - If true, suppress emitting events.\r\n   */\r\n\r\n  function onTransitionEnd(destIndex, newIndex, prevIndex, silently) {\r\n    applyStyle(list, {\r\n      transition: ''\r\n    });\r\n    isLoopPending = false;\r\n\r\n    if (!isFade) {\r\n      Track.jump(newIndex);\r\n    }\r\n\r\n    if (!silently) {\r\n      Splide.emit('moved', newIndex, prevIndex, destIndex);\r\n    }\r\n  }\r\n  /**\r\n   * Convert index to the trimmed position.\r\n   *\r\n   * @return {number} - Trimmed position.\r\n   */\r\n\r\n\r\n  function getTrimmedPosition(index) {\r\n    return Track.trim(Track.toPosition(index));\r\n  }\r\n\r\n  return Track;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/clones/index.js\r\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * The component for cloning some slides for \"loop\" mode of the track.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const clones = (function (Splide, Components) {\r\n  /**\r\n   * Store information of all clones.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  var clones = [];\r\n  /**\r\n   * Store the current clone count on one side.\r\n   *\r\n   * @type {number}\r\n   */\r\n\r\n  var cloneCount = 0;\r\n  /**\r\n   * Keep Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Clones component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Clones = {\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      var _this = this;\r\n\r\n      if (Splide.is(LOOP)) {\r\n        init();\r\n        Splide.on('refresh:before', function () {\r\n          _this.destroy();\r\n        }).on('refresh', init).on('resize', function () {\r\n          if (cloneCount !== getCloneCount()) {\r\n            // Destroy before refresh not to collect clones by the Elements component.\r\n            _this.destroy();\r\n\r\n            Splide.refresh();\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: function destroy() {\r\n      dom_remove(clones);\r\n      clones = [];\r\n    },\r\n\r\n    /**\r\n     * Return all clones.\r\n     *\r\n     * @return {Element[]} - Cloned elements.\r\n     */\r\n    get clones() {\r\n      return clones;\r\n    },\r\n\r\n    /**\r\n     * Return clone length.\r\n     *\r\n     * @return {number} - A length of clones.\r\n     */\r\n    get length() {\r\n      return clones.length;\r\n    }\r\n\r\n  };\r\n  /**\r\n   * Initialization.\r\n   */\r\n\r\n  function init() {\r\n    Clones.destroy();\r\n    cloneCount = getCloneCount();\r\n    generateClones(cloneCount);\r\n  }\r\n  /**\r\n   * Generate and append/prepend clones.\r\n   *\r\n   * @param {number} count - The half number of clones.\r\n   */\r\n\r\n\r\n  function generateClones(count) {\r\n    var length = Elements.length,\r\n        register = Elements.register;\r\n\r\n    if (length) {\r\n      var slides = Elements.slides;\r\n\r\n      while (slides.length < count) {\r\n        slides = slides.concat(slides);\r\n      } // Clones after the last element.\r\n\r\n\r\n      slides.slice(0, count).forEach(function (elm, index) {\r\n        var clone = cloneDeeply(elm);\r\n        append(Elements.list, clone);\r\n        clones.push(clone);\r\n        register(clone, index + length, index % length);\r\n      }); // Clones before the first element.\r\n\r\n      slides.slice(-count).forEach(function (elm, index) {\r\n        var clone = cloneDeeply(elm);\r\n        before(clone, slides[0]);\r\n        clones.push(clone);\r\n        register(clone, index - count, (length + index - count % length) % length);\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Return half count of clones to be generated.\r\n   * Clone count is determined by:\r\n   * - \"clones\" value in the options.\r\n   * - Number of slides that can be placed in a view in \"fixed\" mode.\r\n   * - Max pages a flick action can move.\r\n   * - Whether the slide length is enough for perPage.\r\n   *\r\n   * @return {number} - Count for clones.\r\n   */\r\n\r\n\r\n  function getCloneCount() {\r\n    var options = Splide.options;\r\n\r\n    if (options.clones) {\r\n      return options.clones;\r\n    } // Use the slide length in autoWidth mode because the number cannot be calculated.\r\n\r\n\r\n    var baseCount = options.autoWidth || options.autoHeight ? Elements.length : options.perPage;\r\n    var dimension = options.direction === TTB ? 'Height' : 'Width';\r\n    var fixedSize = toPixel(Splide.root, options[\"fixed\" + dimension]);\r\n\r\n    if (fixedSize) {\r\n      // Roughly calculate the count. This needs not to be strict.\r\n      baseCount = Math.ceil(Elements.track[\"client\" + dimension] / fixedSize);\r\n    }\r\n\r\n    return baseCount * (options.drag ? options.flickMaxPages + 1 : 1);\r\n  }\r\n  /**\r\n   * Clone deeply the given element.\r\n   *\r\n   * @param {Element} elm - An element being duplicated.\r\n   *\r\n   * @return {Node} - A cloned node(element).\r\n   */\r\n\r\n\r\n  function cloneDeeply(elm) {\r\n    var clone = elm.cloneNode(true);\r\n    addClass(clone, Splide.classes.clone); // ID should not be duplicated.\r\n\r\n    removeAttribute(clone, 'id');\r\n    return clone;\r\n  }\r\n\r\n  return Clones;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/layout/directions/horizontal.js\r\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * The resolver component for horizontal layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\r\n\r\n/* harmony default export */ const horizontal = (function (Splide, Components) {\r\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var root = Splide.root;\r\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var track;\r\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var options = Splide.options;\r\n  return {\r\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\r\n    margin: 'margin' + (options.direction === RTL ? 'Left' : 'Right'),\r\n\r\n    /**\r\n     * Always 0 because the height will be determined by inner contents.\r\n     *\r\n     * @type {number}\r\n     */\r\n    height: 0,\r\n\r\n    /**\r\n     * Initialization.\r\n     */\r\n    init: function init() {\r\n      this.resize();\r\n    },\r\n\r\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\r\n    resize: function resize() {\r\n      options = Splide.options;\r\n      track = Elements.track;\r\n      this.gap = toPixel(root, options.gap);\r\n      var padding = options.padding;\r\n      var left = toPixel(root, padding.left || padding);\r\n      var right = toPixel(root, padding.right || padding);\r\n      this.padding = {\r\n        left: left,\r\n        right: right\r\n      };\r\n      applyStyle(track, {\r\n        paddingLeft: unit(left),\r\n        paddingRight: unit(right)\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Return total width from the left of the list to the right of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\r\n     *\r\n     * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\r\n     */\r\n    totalWidth: function totalWidth(index) {\r\n      if (index === void 0) {\r\n        index = Splide.length - 1;\r\n      }\r\n\r\n      var Slide = Elements.getSlide(index);\r\n      var width = 0;\r\n\r\n      if (Slide) {\r\n        var slideRect = getRect(Slide.slide);\r\n        var listRect = getRect(Elements.list);\r\n\r\n        if (options.direction === RTL) {\r\n          width = listRect.right - slideRect.left;\r\n        } else {\r\n          width = slideRect.right - listRect.left;\r\n        }\r\n\r\n        width += this.gap;\r\n      }\r\n\r\n      return width;\r\n    },\r\n\r\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\r\n    slideWidth: function slideWidth(index) {\r\n      if (options.autoWidth) {\r\n        var Slide = Elements.getSlide(index);\r\n        return Slide ? Slide.slide.offsetWidth : 0;\r\n      }\r\n\r\n      var width = options.fixedWidth || (this.width + this.gap) / options.perPage - this.gap;\r\n      return toPixel(root, width);\r\n    },\r\n\r\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\r\n    slideHeight: function slideHeight() {\r\n      var height = options.height || options.fixedHeight || this.width * options.heightRatio;\r\n      return toPixel(root, height);\r\n    },\r\n\r\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\r\n    get width() {\r\n      return track.clientWidth - this.padding.left - this.padding.right;\r\n    }\r\n\r\n  };\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/layout/directions/vertical.js\r\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * The resolver component for vertical layout.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The resolver object.\r\n */\r\n\r\n/* harmony default export */ const vertical = (function (Splide, Components) {\r\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Keep the root element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var root = Splide.root;\r\n  /**\r\n   * Keep the track element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var track;\r\n  /**\r\n   * Keep the latest options.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var options;\r\n  return {\r\n    /**\r\n     * Margin property name.\r\n     *\r\n     * @type {string}\r\n     */\r\n    margin: 'marginBottom',\r\n\r\n    /**\r\n     * Initialization.\r\n     */\r\n    init: function init() {\r\n      this.resize();\r\n    },\r\n\r\n    /**\r\n     * Resize gap and padding.\r\n     * This must be called on init.\r\n     */\r\n    resize: function resize() {\r\n      options = Splide.options;\r\n      track = Elements.track;\r\n      this.gap = toPixel(root, options.gap);\r\n      var padding = options.padding;\r\n      var top = toPixel(root, padding.top || padding);\r\n      var bottom = toPixel(root, padding.bottom || padding);\r\n      this.padding = {\r\n        top: top,\r\n        bottom: bottom\r\n      };\r\n      applyStyle(track, {\r\n        paddingTop: unit(top),\r\n        paddingBottom: unit(bottom)\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Return total height from the top of the list to the bottom of the slide specified by the provided index.\r\n     *\r\n     * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\r\n     *\r\n     * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\r\n     */\r\n    totalHeight: function totalHeight(index) {\r\n      if (index === void 0) {\r\n        index = Splide.length - 1;\r\n      }\r\n\r\n      var Slide = Elements.getSlide(index);\r\n\r\n      if (Slide) {\r\n        return getRect(Slide.slide).bottom - getRect(Elements.list).top + this.gap;\r\n      }\r\n\r\n      return 0;\r\n    },\r\n\r\n    /**\r\n     * Return the slide width in px.\r\n     *\r\n     * @return {number} - The slide width.\r\n     */\r\n    slideWidth: function slideWidth() {\r\n      return toPixel(root, options.fixedWidth || this.width);\r\n    },\r\n\r\n    /**\r\n     * Return the slide height in px.\r\n     *\r\n     * @param {number} index - Slide index.\r\n     *\r\n     * @return {number} - The slide height.\r\n     */\r\n    slideHeight: function slideHeight(index) {\r\n      if (options.autoHeight) {\r\n        var Slide = Elements.getSlide(index);\r\n        return Slide ? Slide.slide.offsetHeight : 0;\r\n      }\r\n\r\n      var height = options.fixedHeight || (this.height + this.gap) / options.perPage - this.gap;\r\n      return toPixel(root, height);\r\n    },\r\n\r\n    /**\r\n     * Return slider width without padding.\r\n     *\r\n     * @return {number} - Current slider width.\r\n     */\r\n    get width() {\r\n      return track.clientWidth;\r\n    },\r\n\r\n    /**\r\n     * Return slide height without padding.\r\n     *\r\n     * @return {number} - Slider height.\r\n     */\r\n    get height() {\r\n      var height = options.height || this.width * options.heightRatio;\r\n      exist(height, '\"height\" or \"heightRatio\" is missing.');\r\n      return toPixel(root, height) - this.padding.top - this.padding.bottom;\r\n    }\r\n\r\n  };\r\n});\r\n;// CONCATENATED MODULE: ./src/js/utils/time.js\r\n/**\r\n * A package of utility functions related with time.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Simple throttle function that controls how often the given function is executed.\r\n *\r\n * @param {function} func - A function to be throttled.\r\n * @param {number}   wait - Time in millisecond for interval of execution.\r\n *\r\n * @return {Function} - A debounced function.\r\n */\r\nfunction throttle(func, wait) {\r\n  var timeout; // Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\r\n\r\n  return function () {\r\n    if (!timeout) {\r\n      timeout = setTimeout(function () {\r\n        func();\r\n        timeout = null;\r\n      }, wait);\r\n    }\r\n  };\r\n}\r\n/**\r\n * Custom setInterval function that provides progress rate as callback.\r\n *\r\n * @param {function} callback - A callback function fired every time the interval time passes.\r\n * @param {number}   interval - Interval duration in milliseconds.\r\n * @param {function} progress - A callback function fired whenever the progress goes.\r\n *\r\n * @return {Object} - An object containing play() and pause() functions.\r\n */\r\n\r\nfunction createInterval(callback, interval, progress) {\r\n  var _window = window,\r\n      requestAnimationFrame = _window.requestAnimationFrame;\r\n  var start,\r\n      elapse,\r\n      rate,\r\n      _pause = true;\r\n\r\n  var step = function step(timestamp) {\r\n    if (!_pause) {\r\n      if (!start) {\r\n        start = timestamp;\r\n\r\n        if (rate && rate < 1) {\r\n          start -= rate * interval;\r\n        }\r\n      }\r\n\r\n      elapse = timestamp - start;\r\n      rate = elapse / interval;\r\n\r\n      if (elapse >= interval) {\r\n        start = 0;\r\n        rate = 1;\r\n        callback();\r\n      }\r\n\r\n      if (progress) {\r\n        progress(rate);\r\n      }\r\n\r\n      requestAnimationFrame(step);\r\n    }\r\n  };\r\n\r\n  return {\r\n    pause: function pause() {\r\n      _pause = true;\r\n      start = 0;\r\n    },\r\n    play: function play(reset) {\r\n      start = 0;\r\n\r\n      if (reset) {\r\n        rate = 0;\r\n      }\r\n\r\n      if (_pause) {\r\n        _pause = false;\r\n        requestAnimationFrame(step);\r\n      }\r\n    }\r\n  };\r\n}\r\n;// CONCATENATED MODULE: ./src/js/components/layout/index.js\r\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The component for handing slide layouts and their sizes.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const layout = (function (Splide, Components) {\r\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Whether the slider is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isVertical = Splide.options.direction === TTB;\r\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Layout = object_assign({\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      bind();\r\n      init(); // The word \"size\" means width for a horizontal slider and height for a vertical slider.\r\n\r\n      this.totalSize = isVertical ? this.totalHeight : this.totalWidth;\r\n      this.slideSize = isVertical ? this.slideHeight : this.slideWidth;\r\n    },\r\n\r\n    /**\r\n     * Destroy the component.\r\n     */\r\n    destroy: function destroy() {\r\n      removeAttribute([Elements.list, Elements.track], 'style');\r\n    },\r\n\r\n    /**\r\n     * Return the slider height on the vertical mode or width on the horizontal mode.\r\n     *\r\n     * @return {number}\r\n     */\r\n    get size() {\r\n      return isVertical ? this.height : this.width;\r\n    }\r\n\r\n  }, isVertical ? vertical(Splide, Components) : horizontal(Splide, Components));\r\n  /**\r\n   * Init slider styles according to options.\r\n   */\r\n\r\n  function init() {\r\n    Layout.init();\r\n    applyStyle(Splide.root, {\r\n      maxWidth: unit(Splide.options.width)\r\n    });\r\n    Elements.each(function (Slide) {\r\n      Slide.slide.style[Layout.margin] = unit(Layout.gap);\r\n    });\r\n    resize();\r\n  }\r\n  /**\r\n   * Listen the resize native event with throttle.\r\n   * Initialize when the component is mounted or options are updated.\r\n   */\r\n\r\n\r\n  function bind() {\r\n    Splide.on('resize load', throttle(function () {\r\n      Splide.emit('resize');\r\n    }, Splide.options.throttle), window).on('resize', resize).on('updated refresh', init);\r\n  }\r\n  /**\r\n   * Resize the track and slide elements.\r\n   */\r\n\r\n\r\n  function resize() {\r\n    var options = Splide.options;\r\n    Layout.resize();\r\n    applyStyle(Elements.track, {\r\n      height: unit(Layout.height)\r\n    });\r\n    var slideHeight = options.autoHeight ? null : unit(Layout.slideHeight());\r\n    Elements.each(function (Slide) {\r\n      applyStyle(Slide.container, {\r\n        height: slideHeight\r\n      });\r\n      applyStyle(Slide.slide, {\r\n        width: options.autoWidth ? null : unit(Layout.slideWidth(Slide.index)),\r\n        height: Slide.container ? null : slideHeight\r\n      });\r\n    });\r\n    Splide.emit('resized');\r\n  }\r\n\r\n  return Layout;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/drag/index.js\r\n/**\r\n * The component for supporting mouse drag and swipe.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nvar drag_abs = Math.abs;\r\n/**\r\n * If the absolute velocity is greater thant this value,\r\n * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\r\n */\r\n\r\nvar MIN_VELOCITY = 0.1;\r\n/**\r\n * Adjust how much the track can be pulled on the first or last page.\r\n * The larger number this is, the farther the track moves.\r\n * This should be around 5 - 9.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar FRICTION_REDUCER = 7;\r\n/**\r\n * The component supporting mouse drag and swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const drag = (function (Splide, Components) {\r\n  /**\r\n   * Store the Move component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  var Track = Components.Track;\r\n  /**\r\n   * Store the Controller component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Controller = Components.Controller;\r\n  /**\r\n   * Coordinate of the track on starting drag.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var startCoord;\r\n  /**\r\n   * Analyzed info on starting drag.\r\n   *\r\n   * @type {Object|null}\r\n   */\r\n\r\n  var startInfo;\r\n  /**\r\n   * Analyzed info being updated while dragging/swiping.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var currentInfo;\r\n  /**\r\n   * Determine whether slides are being dragged or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isDragging;\r\n  /**\r\n   * Whether the slider direction is vertical or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isVertical = Splide.options.direction === TTB;\r\n  /**\r\n   * Axis for the direction.\r\n   *\r\n   * @type {string}\r\n   */\r\n\r\n  var axis = isVertical ? 'y' : 'x';\r\n  /**\r\n   * Drag component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Drag = {\r\n    /**\r\n     * Whether dragging is disabled or not.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    disabled: false,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      var _this = this;\r\n\r\n      var Elements = Components.Elements;\r\n      var track = Elements.track;\r\n      Splide.on('touchstart mousedown', start, track).on('touchmove mousemove', move, track, {\r\n        passive: false\r\n      }).on('touchend touchcancel mouseleave mouseup dragend', end, track).on('mounted refresh', function () {\r\n        // Prevent dragging an image or anchor itself.\r\n        each(Elements.list.querySelectorAll('img, a'), function (elm) {\r\n          Splide.off('dragstart', elm).on('dragstart', function (e) {\r\n            e.preventDefault();\r\n          }, elm, {\r\n            passive: false\r\n          });\r\n        });\r\n      }).on('mounted updated', function () {\r\n        _this.disabled = !Splide.options.drag;\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Called when the track starts to be dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\r\n\r\n  function start(e) {\r\n    if (!Drag.disabled && !isDragging) {\r\n      // These prams are used to evaluate whether the slider should start moving.\r\n      init(e);\r\n    }\r\n  }\r\n  /**\r\n   * Initialize parameters.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\r\n\r\n\r\n  function init(e) {\r\n    startCoord = Track.toCoord(Track.position);\r\n    startInfo = analyze(e, {});\r\n    currentInfo = startInfo;\r\n  }\r\n  /**\r\n   * Called while the track being dragged.\r\n   *\r\n   * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\r\n   */\r\n\r\n\r\n  function move(e) {\r\n    if (startInfo) {\r\n      currentInfo = analyze(e, startInfo);\r\n\r\n      if (isDragging) {\r\n        if (e.cancelable) {\r\n          e.preventDefault();\r\n        }\r\n\r\n        if (!Splide.is(FADE)) {\r\n          var position = startCoord[axis] + currentInfo.offset[axis];\r\n          Track.translate(resist(position));\r\n        }\r\n      } else {\r\n        if (shouldMove(currentInfo)) {\r\n          Splide.emit('drag', startInfo);\r\n          isDragging = true;\r\n          Track.cancel(); // These params are actual drag data.\r\n\r\n          init(e);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Determine whether to start moving the track or not by drag angle.\r\n   *\r\n   * @param {Object} info - An information object.\r\n   *\r\n   * @return {boolean} - True if the track should be moved or false if not.\r\n   */\r\n\r\n\r\n  function shouldMove(_ref) {\r\n    var offset = _ref.offset;\r\n\r\n    if (Splide.State.is(MOVING) && Splide.options.waitForTransition) {\r\n      return false;\r\n    }\r\n\r\n    var angle = Math.atan(drag_abs(offset.y) / drag_abs(offset.x)) * 180 / Math.PI;\r\n\r\n    if (isVertical) {\r\n      angle = 90 - angle;\r\n    }\r\n\r\n    return angle < Splide.options.dragAngleThreshold;\r\n  }\r\n  /**\r\n   * Resist dragging the track on the first/last page because there is no more.\r\n   *\r\n   * @param {number} position - A position being applied to the track.\r\n   *\r\n   * @return {Object} - Adjusted position.\r\n   */\r\n\r\n\r\n  function resist(position) {\r\n    if (Splide.is(SLIDE)) {\r\n      var sign = Track.sign;\r\n\r\n      var _start = sign * Track.trim(Track.toPosition(0));\r\n\r\n      var _end = sign * Track.trim(Track.toPosition(Controller.edgeIndex));\r\n\r\n      position *= sign;\r\n\r\n      if (position < _start) {\r\n        position = _start - FRICTION_REDUCER * Math.log(_start - position);\r\n      } else if (position > _end) {\r\n        position = _end + FRICTION_REDUCER * Math.log(position - _end);\r\n      }\r\n\r\n      position *= sign;\r\n    }\r\n\r\n    return position;\r\n  }\r\n  /**\r\n   * Called when dragging ends.\r\n   */\r\n\r\n\r\n  function end() {\r\n    startInfo = null;\r\n\r\n    if (isDragging) {\r\n      Splide.emit('dragged', currentInfo);\r\n      go(currentInfo);\r\n      isDragging = false;\r\n    }\r\n  }\r\n  /**\r\n   * Go to the slide determined by the analyzed data.\r\n   *\r\n   * @param {Object} info - An info object.\r\n   */\r\n\r\n\r\n  function go(info) {\r\n    var velocity = info.velocity[axis];\r\n    var absV = drag_abs(velocity);\r\n\r\n    if (absV > 0) {\r\n      var options = Splide.options;\r\n      var index = Splide.index;\r\n      var sign = velocity < 0 ? -1 : 1;\r\n      var destIndex = index;\r\n\r\n      if (!Splide.is(FADE)) {\r\n        var destination = Track.position;\r\n\r\n        if (absV > options.flickVelocityThreshold && drag_abs(info.offset[axis]) < options.swipeDistanceThreshold) {\r\n          destination += sign * Math.min(absV * options.flickPower, Components.Layout.size * (options.flickMaxPages || 1));\r\n        }\r\n\r\n        destIndex = Track.toIndex(destination);\r\n      }\r\n      /*\r\n       * Do not allow the track to go to a previous position if there is enough velocity.\r\n       * Always use the adjacent index for the fade mode.\r\n       */\r\n\r\n\r\n      if (destIndex === index && absV > MIN_VELOCITY) {\r\n        destIndex = index + sign * Track.sign;\r\n      }\r\n\r\n      if (Splide.is(SLIDE)) {\r\n        destIndex = between(destIndex, 0, Controller.edgeIndex);\r\n      }\r\n\r\n      Controller.go(destIndex, options.isNavigation);\r\n    }\r\n  }\r\n  /**\r\n   * Analyze the given event object and return important information for handling swipe behavior.\r\n   *\r\n   * @param {Event}   e          - Touch or Mouse event object.\r\n   * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\r\n   *\r\n   * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\r\n   */\r\n\r\n\r\n  function analyze(e, startInfo) {\r\n    var timeStamp = e.timeStamp,\r\n        touches = e.touches;\r\n\r\n    var _ref2 = touches ? touches[0] : e,\r\n        clientX = _ref2.clientX,\r\n        clientY = _ref2.clientY;\r\n\r\n    var _ref3 = startInfo.to || {},\r\n        _ref3$x = _ref3.x,\r\n        fromX = _ref3$x === void 0 ? clientX : _ref3$x,\r\n        _ref3$y = _ref3.y,\r\n        fromY = _ref3$y === void 0 ? clientY : _ref3$y;\r\n\r\n    var startTime = startInfo.time || 0;\r\n    var offset = {\r\n      x: clientX - fromX,\r\n      y: clientY - fromY\r\n    };\r\n    var duration = timeStamp - startTime;\r\n    var velocity = {\r\n      x: offset.x / duration,\r\n      y: offset.y / duration\r\n    };\r\n    return {\r\n      to: {\r\n        x: clientX,\r\n        y: clientY\r\n      },\r\n      offset: offset,\r\n      time: timeStamp,\r\n      velocity: velocity\r\n    };\r\n  }\r\n\r\n  return Drag;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/click/index.js\r\n/**\r\n * The component for handling a click event.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * The component for handling a click event.\r\n * Click should be disabled during drag/swipe.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n/* harmony default export */ const click = (function (Splide, Components) {\r\n  /**\r\n   * Whether click is disabled or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  var disabled = false;\r\n  /**\r\n   * Click component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Click = {\r\n    /**\r\n     * Mount only when the drag is activated and the slide type is not \"fade\".\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: Splide.options.drag,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      Splide.on('click', onClick, Components.Elements.track, {\r\n        capture: true\r\n      }).on('drag', function () {\r\n        disabled = true;\r\n      }).on('dragged', function () {\r\n        // Make sure the flag is released after the click event is fired.\r\n        setTimeout(function () {\r\n          disabled = false;\r\n        });\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Called when a track element is clicked.\r\n   *\r\n   * @param {Event} e - A click event.\r\n   */\r\n\r\n  function onClick(e) {\r\n    if (disabled) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      e.stopImmediatePropagation();\r\n    }\r\n  }\r\n\r\n  return Click;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/autoplay/index.js\r\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * Set of pause flags.\r\n */\r\n\r\nvar PAUSE_FLAGS = {\r\n  HOVER: 1,\r\n  FOCUS: 2,\r\n  MANUAL: 3\r\n};\r\n/**\r\n * The component for playing slides automatically.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const autoplay = (function (Splide, Components, name) {\r\n  /**\r\n   * Store pause flags.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  var flags = [];\r\n  /**\r\n   * Store an interval object.\r\n   *\r\n   * @type {Object};\r\n   */\r\n\r\n  var interval;\r\n  /**\r\n   * Keep the Elements component.\r\n   *\r\n   * @type {string}\r\n   */\r\n\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Autoplay component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Autoplay = {\r\n    /**\r\n     * Required only when the autoplay option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: Splide.options.autoplay,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     * Note that autoplay starts only if there are slides over perPage number.\r\n     */\r\n    mount: function mount() {\r\n      var options = Splide.options;\r\n\r\n      if (Elements.slides.length > options.perPage) {\r\n        interval = createInterval(function () {\r\n          Splide.go('>');\r\n        }, options.interval, function (rate) {\r\n          Splide.emit(name + \":playing\", rate);\r\n\r\n          if (Elements.bar) {\r\n            applyStyle(Elements.bar, {\r\n              width: rate * 100 + \"%\"\r\n            });\r\n          }\r\n        });\r\n        bind();\r\n        this.play();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Start autoplay.\r\n     *\r\n     * @param {number} flag - A pause flag to be removed.\r\n     */\r\n    play: function play(flag) {\r\n      if (flag === void 0) {\r\n        flag = 0;\r\n      }\r\n\r\n      flags = flags.filter(function (f) {\r\n        return f !== flag;\r\n      });\r\n\r\n      if (!flags.length) {\r\n        Splide.emit(name + \":play\");\r\n        interval.play(Splide.options.resetProgress);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Pause autoplay.\r\n     * Note that Array.includes is not supported by IE.\r\n     *\r\n     * @param {number} flag - A pause flag to be added.\r\n     */\r\n    pause: function pause(flag) {\r\n      if (flag === void 0) {\r\n        flag = 0;\r\n      }\r\n\r\n      interval.pause();\r\n\r\n      if (flags.indexOf(flag) === -1) {\r\n        flags.push(flag);\r\n      }\r\n\r\n      if (flags.length === 1) {\r\n        Splide.emit(name + \":pause\");\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Listen some events.\r\n   */\r\n\r\n  function bind() {\r\n    var options = Splide.options;\r\n    var sibling = Splide.sibling;\r\n    var elms = [Splide.root, sibling ? sibling.root : null];\r\n\r\n    if (options.pauseOnHover) {\r\n      switchOn(elms, 'mouseleave', PAUSE_FLAGS.HOVER, true);\r\n      switchOn(elms, 'mouseenter', PAUSE_FLAGS.HOVER, false);\r\n    }\r\n\r\n    if (options.pauseOnFocus) {\r\n      switchOn(elms, 'focusout', PAUSE_FLAGS.FOCUS, true);\r\n      switchOn(elms, 'focusin', PAUSE_FLAGS.FOCUS, false);\r\n    }\r\n\r\n    if (Elements.play) {\r\n      Splide.on('click', function () {\r\n        // Need to be removed a focus flag at first.\r\n        Autoplay.play(PAUSE_FLAGS.FOCUS);\r\n        Autoplay.play(PAUSE_FLAGS.MANUAL);\r\n      }, Elements.play);\r\n    }\r\n\r\n    if (Elements.pause) {\r\n      switchOn([Elements.pause], 'click', PAUSE_FLAGS.MANUAL, false);\r\n    }\r\n\r\n    Splide.on('move refresh', function () {\r\n      Autoplay.play();\r\n    }) // Rewind the timer.\r\n    .on('destroy', function () {\r\n      Autoplay.pause();\r\n    });\r\n  }\r\n  /**\r\n   * Play or pause on the given event.\r\n   *\r\n   * @param {Element[]} elms  - Elements.\r\n   * @param {string}    event - An event name or names.\r\n   * @param {number}    flag  - A pause flag defined on the top.\r\n   * @param {boolean}   play  - Determine whether to play or pause.\r\n   */\r\n\r\n\r\n  function switchOn(elms, event, flag, play) {\r\n    elms.forEach(function (elm) {\r\n      Splide.on(event, function () {\r\n        Autoplay[play ? 'play' : 'pause'](flag);\r\n      }, elm);\r\n    });\r\n  }\r\n\r\n  return Autoplay;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/cover/index.js\r\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * The component for change an img element to background image of its wrapper.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const cover = (function (Splide, Components) {\r\n  /**\r\n   * Hold options.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  var options = Splide.options;\r\n  /**\r\n   * Cover component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Cover = {\r\n    /**\r\n     * Required only when \"cover\" option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: options.cover,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      Splide.on('lazyload:loaded', function (img) {\r\n        cover(img, false);\r\n      });\r\n      Splide.on('mounted updated refresh', function () {\r\n        return apply(false);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: function destroy() {\r\n      apply(true);\r\n    }\r\n  };\r\n  /**\r\n   * Apply \"cover\" to all slides.\r\n   *\r\n   * @param {boolean} uncover - If true, \"cover\" will be clear.\r\n   */\r\n\r\n  function apply(uncover) {\r\n    Components.Elements.each(function (Slide) {\r\n      var img = child(Slide.slide, 'IMG') || child(Slide.container, 'IMG');\r\n\r\n      if (img && img.src) {\r\n        cover(img, uncover);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Set background image of the parent element, using source of the given image element.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {boolean} uncover - Reset \"cover\".\r\n   */\r\n\r\n\r\n  function cover(img, uncover) {\r\n    applyStyle(img.parentElement, {\r\n      background: uncover ? '' : \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\"\r\n    });\r\n    applyStyle(img, {\r\n      display: uncover ? '' : 'none'\r\n    });\r\n  }\r\n\r\n  return Cover;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/arrows/path.js\r\n/**\r\n * Export vector path for an arrow.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Namespace definition for SVG element.\r\n *\r\n * @type {string}\r\n */\r\nvar XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\r\n/**\r\n * The arrow vector path.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\r\n/**\r\n * SVG width and height.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar SIZE = 40;\r\n;// CONCATENATED MODULE: ./src/js/components/arrows/index.js\r\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * The component for appending prev/next arrows.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const arrows = (function (Splide, Components, name) {\r\n  /**\r\n   * Previous arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\r\n  var prev;\r\n  /**\r\n   * Next arrow element.\r\n   *\r\n   * @type {Element|undefined}\r\n   */\r\n\r\n  var next;\r\n  /**\r\n   * Store the class list.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var classes = Splide.classes;\r\n  /**\r\n   * Hold the root element.\r\n   *\r\n   * @type {Element}\r\n   */\r\n\r\n  var root = Splide.root;\r\n  /**\r\n   * Whether arrows are created programmatically or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var created;\r\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Arrows component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Arrows = {\r\n    /**\r\n     * Required when the arrows option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: Splide.options.arrows,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      // Attempt to get arrows from HTML source.\r\n      prev = Elements.arrows.prev;\r\n      next = Elements.arrows.next; // If arrows were not found in HTML, let's generate them.\r\n\r\n      if ((!prev || !next) && Splide.options.arrows) {\r\n        prev = createArrow(true);\r\n        next = createArrow(false);\r\n        created = true;\r\n        appendArrows();\r\n      }\r\n\r\n      if (prev && next) {\r\n        bind();\r\n      }\r\n\r\n      this.arrows = {\r\n        prev: prev,\r\n        next: next\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Called after all components are mounted.\r\n     */\r\n    mounted: function mounted() {\r\n      Splide.emit(name + \":mounted\", prev, next);\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: function destroy() {\r\n      removeAttribute([prev, next], 'disabled');\r\n\r\n      if (created) {\r\n        dom_remove(prev.parentElement);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Listen to native and custom events.\r\n   */\r\n\r\n  function bind() {\r\n    Splide.on('click', function () {\r\n      Splide.go('<');\r\n    }, prev).on('click', function () {\r\n      Splide.go('>');\r\n    }, next).on('mounted move updated refresh', updateDisabled);\r\n  }\r\n  /**\r\n   * Update a disabled attribute.\r\n   */\r\n\r\n\r\n  function updateDisabled() {\r\n    var _Components$Controlle = Components.Controller,\r\n        prevIndex = _Components$Controlle.prevIndex,\r\n        nextIndex = _Components$Controlle.nextIndex;\r\n    var isEnough = Splide.length > Splide.options.perPage || Splide.is(LOOP);\r\n    prev.disabled = prevIndex < 0 || !isEnough;\r\n    next.disabled = nextIndex < 0 || !isEnough;\r\n    Splide.emit(name + \":updated\", prev, next, prevIndex, nextIndex);\r\n  }\r\n  /**\r\n   * Create a wrapper element and append arrows.\r\n   */\r\n\r\n\r\n  function appendArrows() {\r\n    var wrapper = create('div', {\r\n      \"class\": classes.arrows\r\n    });\r\n    append(wrapper, prev);\r\n    append(wrapper, next);\r\n    var slider = Elements.slider;\r\n    var parent = Splide.options.arrows === 'slider' && slider ? slider : root;\r\n    before(wrapper, parent.firstElementChild);\r\n  }\r\n  /**\r\n   * Create an arrow element.\r\n   *\r\n   * @param {boolean} prev - Determine to create a prev arrow or next arrow.\r\n   *\r\n   * @return {Element} - A created arrow element.\r\n   */\r\n\r\n\r\n  function createArrow(prev) {\r\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\">\" + (\"<svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\"\\tviewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\"\\twidth=\\\"\" + SIZE + \"\\\"\\theight=\\\"\" + SIZE + \"\\\">\") + (\"<path d=\\\"\" + (Splide.options.arrowPath || PATH) + \"\\\" />\");\r\n    return domify(arrow);\r\n  }\r\n\r\n  return Arrows;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/pagination/index.js\r\n/**\r\n * The component for handling pagination\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * The event name for updating some attributes of pagination nodes.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar ATTRIBUTES_UPDATE_EVENT = 'move.page';\r\n/**\r\n * The event name for recreating pagination.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar UPDATE_EVENT = 'updated.page refresh.page';\r\n/**\r\n * The component for handling pagination\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const pagination = (function (Splide, Components, name) {\r\n  /**\r\n   * Store all data for pagination.\r\n   * - list: A list element.\r\n   * - items: An array that contains objects(li, button, index, page).\r\n   *\r\n   * @type {Object}\r\n   */\r\n  var data = {};\r\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * Pagination component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Pagination = {\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      var pagination = Splide.options.pagination;\r\n\r\n      if (pagination) {\r\n        data = createPagination();\r\n        var slider = Elements.slider;\r\n        var parent = pagination === 'slider' && slider ? slider : Splide.root;\r\n        append(parent, data.list);\r\n        Splide.on(ATTRIBUTES_UPDATE_EVENT, updateAttributes);\r\n      }\r\n\r\n      Splide.off(UPDATE_EVENT).on(UPDATE_EVENT, function () {\r\n        Pagination.destroy();\r\n\r\n        if (Splide.options.pagination) {\r\n          Pagination.mount();\r\n          Pagination.mounted();\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Called after all components are mounted.\r\n     */\r\n    mounted: function mounted() {\r\n      if (Splide.options.pagination) {\r\n        var index = Splide.index;\r\n        Splide.emit(name + \":mounted\", data, this.getItem(index));\r\n        updateAttributes(index, -1);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Destroy the pagination.\r\n     * Be aware that node.remove() is not supported by IE.\r\n     */\r\n    destroy: function destroy() {\r\n      dom_remove(data.list);\r\n\r\n      if (data.items) {\r\n        data.items.forEach(function (item) {\r\n          Splide.off('click', item.button);\r\n        });\r\n      } // Do not remove UPDATE_EVENT to recreate pagination if needed.\r\n\r\n\r\n      Splide.off(ATTRIBUTES_UPDATE_EVENT);\r\n      data = {};\r\n    },\r\n\r\n    /**\r\n     * Return an item by index.\r\n     *\r\n     * @param {number} index - A slide index.\r\n     *\r\n     * @return {Object|undefined} - An item object on success or undefined on failure.\r\n     */\r\n    getItem: function getItem(index) {\r\n      return data.items[Components.Controller.toPage(index)];\r\n    },\r\n\r\n    /**\r\n     * Return object containing pagination data.\r\n     *\r\n     * @return {Object} - Pagination data including list and items.\r\n     */\r\n    get data() {\r\n      return data;\r\n    }\r\n\r\n  };\r\n  /**\r\n   * Update attributes.\r\n   *\r\n   * @param {number} index     - Active index.\r\n   * @param {number} prevIndex - Prev index.\r\n   */\r\n\r\n  function updateAttributes(index, prevIndex) {\r\n    var prev = Pagination.getItem(prevIndex);\r\n    var curr = Pagination.getItem(index);\r\n    var active = STATUS_CLASSES.active;\r\n\r\n    if (prev) {\r\n      removeClass(prev.button, active);\r\n    }\r\n\r\n    if (curr) {\r\n      addClass(curr.button, active);\r\n    }\r\n\r\n    Splide.emit(name + \":updated\", data, prev, curr);\r\n  }\r\n  /**\r\n   * Create a wrapper and button elements.\r\n   *\r\n   * @return {Object} - An object contains all data.\r\n   */\r\n\r\n\r\n  function createPagination() {\r\n    var options = Splide.options;\r\n    var classes = Splide.classes;\r\n    var list = create('ul', {\r\n      \"class\": classes.pagination\r\n    });\r\n    var items = Elements.getSlides(false).filter(function (Slide) {\r\n      return options.focus !== false || Slide.index % options.perPage === 0;\r\n    }).map(function (Slide, page) {\r\n      var li = create('li', {});\r\n      var button = create('button', {\r\n        \"class\": classes.page,\r\n        type: 'button'\r\n      });\r\n      append(li, button);\r\n      append(list, li);\r\n      Splide.on('click', function () {\r\n        Splide.go(\">\" + page);\r\n      }, button);\r\n      return {\r\n        li: li,\r\n        button: button,\r\n        page: page,\r\n        Slides: Elements.getSlidesByPage(page)\r\n      };\r\n    });\r\n    return {\r\n      list: list,\r\n      items: items\r\n    };\r\n  }\r\n\r\n  return Pagination;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/lazyload/index.js\r\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * The name for a data attribute of src.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar SRC_DATA_NAME = 'data-splide-lazy';\r\n/**\r\n * The name for a data attribute of srcset.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar SRCSET_DATA_NAME = 'data-splide-lazy-srcset';\r\n/**\r\n * The component for loading slider images lazily.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n * @param {string} name       - A component name as a lowercase string.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const lazyload = (function (Splide, Components, name) {\r\n  /**\r\n   * Next index for sequential loading.\r\n   *\r\n   * @type {number}\r\n   */\r\n  var nextIndex;\r\n  /**\r\n   * Store objects containing an img element and a Slide object.\r\n   *\r\n   * @type {Object[]}\r\n   */\r\n\r\n  var images;\r\n  /**\r\n   * Store the options.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var options = Splide.options;\r\n  /**\r\n   * Whether to load images sequentially or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n\r\n  var isSequential = options.lazyLoad === 'sequential';\r\n  /**\r\n   * Lazyload component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Lazyload = {\r\n    /**\r\n     * Mount only when the lazyload option is provided.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: options.lazyLoad,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      Splide.on('mounted refresh', function () {\r\n        init();\r\n        Components.Elements.each(function (Slide) {\r\n          each(Slide.slide.querySelectorAll(\"[\" + SRC_DATA_NAME + \"], [\" + SRCSET_DATA_NAME + \"]\"), function (img) {\r\n            if (!img.src && !img.srcset) {\r\n              images.push({\r\n                img: img,\r\n                Slide: Slide\r\n              });\r\n              applyStyle(img, {\r\n                display: 'none'\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        if (isSequential) {\r\n          loadNext();\r\n        }\r\n      });\r\n\r\n      if (!isSequential) {\r\n        Splide.on(\"mounted refresh moved.\" + name, check);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: init\r\n  };\r\n  /**\r\n   * Initialize parameters.\r\n   */\r\n\r\n  function init() {\r\n    images = [];\r\n    nextIndex = 0;\r\n  }\r\n  /**\r\n   * Check how close each image is from the active slide and\r\n   * determine whether to start loading or not, according to the distance.\r\n   *\r\n   * @param {number} index - Current index.\r\n   */\r\n\r\n\r\n  function check(index) {\r\n    index = isNaN(index) ? Splide.index : index;\r\n    images = images.filter(function (image) {\r\n      if (image.Slide.isWithin(index, options.perPage * (options.preloadPages + 1))) {\r\n        load(image.img, image.Slide);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }); // Unbind if all images are loaded.\r\n\r\n    if (!images[0]) {\r\n      Splide.off(\"moved.\" + name);\r\n    }\r\n  }\r\n  /**\r\n   * Start loading an image.\r\n   * Creating a clone of the image element since setting src attribute directly to it\r\n   * often occurs 'hitch', blocking some other processes of a browser.\r\n   *\r\n   * @param {Element} img   - An image element.\r\n   * @param {Object}  Slide - A Slide object.\r\n   */\r\n\r\n\r\n  function load(img, Slide) {\r\n    addClass(Slide.slide, STATUS_CLASSES.loading);\r\n    var spinner = create('span', {\r\n      \"class\": Splide.classes.spinner\r\n    });\r\n    append(img.parentElement, spinner);\r\n\r\n    img.onload = function () {\r\n      loaded(img, spinner, Slide, false);\r\n    };\r\n\r\n    img.onerror = function () {\r\n      loaded(img, spinner, Slide, true);\r\n    };\r\n\r\n    setAttribute(img, 'srcset', getAttribute(img, SRCSET_DATA_NAME) || '');\r\n    setAttribute(img, 'src', getAttribute(img, SRC_DATA_NAME) || '');\r\n  }\r\n  /**\r\n   * Start loading a next image in images array.\r\n   */\r\n\r\n\r\n  function loadNext() {\r\n    if (nextIndex < images.length) {\r\n      var image = images[nextIndex];\r\n      load(image.img, image.Slide);\r\n    }\r\n\r\n    nextIndex++;\r\n  }\r\n  /**\r\n   * Called just after the image was loaded or loading was aborted by some error.\r\n   *\r\n   * @param {Element} img     - An image element.\r\n   * @param {Element} spinner - A spinner element.\r\n   * @param {Object}  Slide   - A Slide object.\r\n   * @param {boolean} error   - True if the image was loaded successfully or false on error.\r\n   */\r\n\r\n\r\n  function loaded(img, spinner, Slide, error) {\r\n    removeClass(Slide.slide, STATUS_CLASSES.loading);\r\n\r\n    if (!error) {\r\n      dom_remove(spinner);\r\n      applyStyle(img, {\r\n        display: ''\r\n      });\r\n      Splide.emit(name + \":loaded\", img).emit('resize');\r\n    }\r\n\r\n    if (isSequential) {\r\n      loadNext();\r\n    }\r\n  }\r\n\r\n  return Lazyload;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/constants/a11y.js\r\n/**\r\n * Export aria attribute names.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n/**\r\n * Attribute name for aria-current.\r\n *\r\n * @type {string}\r\n */\r\nvar ARIA_CURRENRT = 'aria-current';\r\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar ARIA_CONTROLS = 'aria-controls';\r\n/**\r\n * Attribute name for aria-control.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar ARIA_LABEL = 'aria-label';\r\n/**\r\n * Attribute name for aria-labelledby.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar ARIA_LABELLEDBY = 'aria-labelledby';\r\n/**\r\n * Attribute name for aria-hidden.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar ARIA_HIDDEN = 'aria-hidden';\r\n/**\r\n * Attribute name for tab-index.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar TAB_INDEX = 'tabindex';\r\n;// CONCATENATED MODULE: ./src/js/components/keyboard/index.js\r\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * Map a key to a slide control.\r\n *\r\n * @type {Object}\r\n */\r\n\r\nvar KEY_MAP = {\r\n  ltr: {\r\n    ArrowLeft: '<',\r\n    ArrowRight: '>',\r\n    // For IE.\r\n    Left: '<',\r\n    Right: '>'\r\n  },\r\n  rtl: {\r\n    ArrowLeft: '>',\r\n    ArrowRight: '<',\r\n    // For IE.\r\n    Left: '>',\r\n    Right: '<'\r\n  },\r\n  ttb: {\r\n    ArrowUp: '<',\r\n    ArrowDown: '>',\r\n    // For IE.\r\n    Up: '<',\r\n    Down: '>'\r\n  }\r\n};\r\n/**\r\n * The component for controlling slides via keyboard.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const keyboard = (function (Splide) {\r\n  /**\r\n   * Hold the target element.\r\n   *\r\n   * @type {Element|Document|undefined}\r\n   */\r\n  var target;\r\n  return {\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      Splide.on('mounted updated', function () {\r\n        var options = Splide.options;\r\n        var root = Splide.root;\r\n        var map = KEY_MAP[options.direction];\r\n        var keyboard = options.keyboard;\r\n\r\n        if (target) {\r\n          Splide.off('keydown', target);\r\n          removeAttribute(root, TAB_INDEX);\r\n        }\r\n\r\n        if (keyboard) {\r\n          if (keyboard === 'focused') {\r\n            target = root;\r\n            setAttribute(root, TAB_INDEX, 0);\r\n          } else {\r\n            target = document;\r\n          }\r\n\r\n          Splide.on('keydown', function (e) {\r\n            if (map[e.key]) {\r\n              Splide.go(map[e.key]);\r\n            }\r\n          }, target);\r\n        }\r\n      });\r\n    }\r\n  };\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/a11y/index.js\r\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n/**\r\n * The component for enhancing accessibility.\r\n *\r\n * @param {Splide} Splide     - A Splide instance.\r\n * @param {Object} Components - An object containing components.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const a11y = (function (Splide, Components) {\r\n  /**\r\n   * Hold a i18n object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  var i18n = Splide.i18n;\r\n  /**\r\n   * Hold the Elements component.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Elements = Components.Elements;\r\n  /**\r\n   * All attributes related with A11y.\r\n   *\r\n   * @type {string[]}\r\n   */\r\n\r\n  var allAttributes = [ARIA_HIDDEN, TAB_INDEX, ARIA_CONTROLS, ARIA_LABEL, ARIA_CURRENRT, 'role'];\r\n  /**\r\n   * A11y component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var A11y = {\r\n    /**\r\n     * Required only when the accessibility option is true.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: Splide.options.accessibility,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      Splide.on('visible', function (Slide) {\r\n        updateSlide(Slide.slide, true);\r\n      }).on('hidden', function (Slide) {\r\n        updateSlide(Slide.slide, false);\r\n      }).on('arrows:mounted', initArrows).on('arrows:updated', updateArrows).on('pagination:mounted', initPagination).on('pagination:updated', updatePagination).on('refresh', function () {\r\n        removeAttribute(Components.Clones.clones, allAttributes);\r\n      });\r\n\r\n      if (Splide.options.isNavigation) {\r\n        Splide.on('navigation:mounted navigation:updated', initNavigation).on('active', function (Slide) {\r\n          updateNavigation(Slide, true);\r\n        }).on('inactive', function (Slide) {\r\n          updateNavigation(Slide, false);\r\n        });\r\n      }\r\n\r\n      initAutoplay();\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     */\r\n    destroy: function destroy() {\r\n      var Arrows = Components.Arrows;\r\n      var arrows = Arrows ? Arrows.arrows : {};\r\n      removeAttribute(Elements.slides.concat([arrows.prev, arrows.next, Elements.play, Elements.pause]), allAttributes);\r\n    }\r\n  };\r\n  /**\r\n   * Update slide attributes when it gets visible or hidden.\r\n   *\r\n   * @param {Element} slide   - A slide element.\r\n   * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\r\n   */\r\n\r\n  function updateSlide(slide, visible) {\r\n    setAttribute(slide, ARIA_HIDDEN, !visible);\r\n\r\n    if (Splide.options.slideFocus) {\r\n      setAttribute(slide, TAB_INDEX, visible ? 0 : -1);\r\n    }\r\n  }\r\n  /**\r\n   * Initialize arrows if they are available.\r\n   * Append screen reader elements and add aria-controls attribute.\r\n   *\r\n   * @param {Element} prev - Previous arrow element.\r\n   * @param {Element} next - Next arrow element.\r\n   */\r\n\r\n\r\n  function initArrows(prev, next) {\r\n    var controls = Elements.track.id;\r\n    setAttribute(prev, ARIA_CONTROLS, controls);\r\n    setAttribute(next, ARIA_CONTROLS, controls);\r\n  }\r\n  /**\r\n   * Update arrow attributes.\r\n   *\r\n   * @param {Element} prev      - Previous arrow element.\r\n   * @param {Element} next      - Next arrow element.\r\n   * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\r\n   * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\r\n   */\r\n\r\n\r\n  function updateArrows(prev, next, prevIndex, nextIndex) {\r\n    var index = Splide.index;\r\n    var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\r\n    var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\r\n    setAttribute(prev, ARIA_LABEL, prevLabel);\r\n    setAttribute(next, ARIA_LABEL, nextLabel);\r\n  }\r\n  /**\r\n   * Initialize pagination if it's available.\r\n   * Append a screen reader element and add aria-controls/label attribute to each item.\r\n   *\r\n   * @param {Object} data       - Data object containing all items.\r\n   * @param {Object} activeItem - An initial active item.\r\n   */\r\n\r\n\r\n  function initPagination(data, activeItem) {\r\n    if (activeItem) {\r\n      setAttribute(activeItem.button, ARIA_CURRENRT, true);\r\n    }\r\n\r\n    data.items.forEach(function (item) {\r\n      var options = Splide.options;\r\n      var text = options.focus === false && options.perPage > 1 ? i18n.pageX : i18n.slideX;\r\n      var label = sprintf(text, item.page + 1);\r\n      var button = item.button;\r\n      var controls = item.Slides.map(function (Slide) {\r\n        return Slide.slide.id;\r\n      });\r\n      setAttribute(button, ARIA_CONTROLS, controls.join(' '));\r\n      setAttribute(button, ARIA_LABEL, label);\r\n    });\r\n  }\r\n  /**\r\n   * Update pagination attributes.\r\n   *\r\n   * @param {Object}  data - Data object containing all items.\r\n   * @param {Element} prev - A previous active element.\r\n   * @param {Element} curr - A current active element.\r\n   */\r\n\r\n\r\n  function updatePagination(data, prev, curr) {\r\n    if (prev) {\r\n      removeAttribute(prev.button, ARIA_CURRENRT);\r\n    }\r\n\r\n    if (curr) {\r\n      setAttribute(curr.button, ARIA_CURRENRT, true);\r\n    }\r\n  }\r\n  /**\r\n   * Initialize autoplay buttons.\r\n   */\r\n\r\n\r\n  function initAutoplay() {\r\n    ['play', 'pause'].forEach(function (name) {\r\n      var elm = Elements[name];\r\n\r\n      if (elm) {\r\n        if (!isButton(elm)) {\r\n          setAttribute(elm, 'role', 'button');\r\n        }\r\n\r\n        setAttribute(elm, ARIA_CONTROLS, Elements.track.id);\r\n        setAttribute(elm, ARIA_LABEL, i18n[name]);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Initialize navigation slider.\r\n   * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\r\n   *\r\n   * @param {Splide} main - A main Splide instance.\r\n   */\r\n\r\n\r\n  function initNavigation(main) {\r\n    Elements.each(function (Slide) {\r\n      var slide = Slide.slide;\r\n      var realIndex = Slide.realIndex;\r\n\r\n      if (!isButton(slide)) {\r\n        setAttribute(slide, 'role', 'button');\r\n      }\r\n\r\n      var slideIndex = realIndex > -1 ? realIndex : Slide.index;\r\n      var label = sprintf(i18n.slideX, slideIndex + 1);\r\n      var mainSlide = main.Components.Elements.getSlide(slideIndex);\r\n      setAttribute(slide, ARIA_LABEL, label);\r\n\r\n      if (mainSlide) {\r\n        setAttribute(slide, ARIA_CONTROLS, mainSlide.slide.id);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Update navigation attributes.\r\n   *\r\n   * @param {Object}  Slide  - A target Slide object.\r\n   * @param {boolean} active - True if the slide is active or false if inactive.\r\n   */\r\n\r\n\r\n  function updateNavigation(_ref, active) {\r\n    var slide = _ref.slide;\r\n\r\n    if (active) {\r\n      setAttribute(slide, ARIA_CURRENRT, true);\r\n    } else {\r\n      removeAttribute(slide, ARIA_CURRENRT);\r\n    }\r\n  }\r\n  /**\r\n   * Check if the given element is button or not.\r\n   *\r\n   * @param {Element} elm - An element to be checked.\r\n   *\r\n   * @return {boolean} - True if the given element is button.\r\n   */\r\n\r\n\r\n  function isButton(elm) {\r\n    return elm.tagName === 'BUTTON';\r\n  }\r\n\r\n  return A11y;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/sync/index.js\r\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * The event name for sync.\r\n *\r\n * @type {string}\r\n */\r\n\r\nvar SYNC_EVENT = 'move.sync';\r\n/**\r\n * The event names for click navigation.\r\n * @type {string}\r\n */\r\n\r\nvar CLICK_EVENTS = 'mouseup touchend';\r\n/**\r\n * The keys for triggering the navigation button.\r\n *\r\n * @type {String[]}\r\n */\r\n\r\nvar TRIGGER_KEYS = [' ', 'Enter', 'Spacebar'];\r\n/**\r\n * The component for synchronizing a slider with another.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const sync = (function (Splide) {\r\n  /**\r\n   * Keep the sibling Splide instance.\r\n   *\r\n   * @type {Splide}\r\n   */\r\n  var sibling = Splide.sibling;\r\n  /**\r\n   * Whether the sibling slider is navigation or not.\r\n   *\r\n   * @type {Splide|boolean}\r\n   */\r\n\r\n  var isNavigation = sibling && sibling.options.isNavigation;\r\n  /**\r\n   * Layout component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Sync = {\r\n    /**\r\n     * Required only when the sub slider is available.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: !!sibling,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      syncMain();\r\n      syncSibling();\r\n\r\n      if (isNavigation) {\r\n        bind();\r\n        Splide.on('refresh', function () {\r\n          setTimeout(function () {\r\n            bind();\r\n            sibling.emit('navigation:updated', Splide);\r\n          });\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Called after all components are mounted.\r\n     */\r\n    mounted: function mounted() {\r\n      if (isNavigation) {\r\n        sibling.emit('navigation:mounted', Splide);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Listen the primary slider event to move secondary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\r\n\r\n  function syncMain() {\r\n    Splide.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\r\n      sibling.off(SYNC_EVENT).go(sibling.is(LOOP) ? destIndex : newIndex, false);\r\n      syncSibling();\r\n    });\r\n  }\r\n  /**\r\n   * Listen the secondary slider event to move primary one.\r\n   * Must unbind a handler at first to avoid infinite loop.\r\n   */\r\n\r\n\r\n  function syncSibling() {\r\n    sibling.on(SYNC_EVENT, function (newIndex, prevIndex, destIndex) {\r\n      Splide.off(SYNC_EVENT).go(Splide.is(LOOP) ? destIndex : newIndex, false);\r\n      syncMain();\r\n    });\r\n  }\r\n  /**\r\n   * Listen some events on each slide.\r\n   */\r\n\r\n\r\n  function bind() {\r\n    sibling.Components.Elements.each(function (_ref) {\r\n      var slide = _ref.slide,\r\n          index = _ref.index;\r\n\r\n      /*\r\n       * Listen mouseup and touchend events to handle click.\r\n       */\r\n      Splide.off(CLICK_EVENTS, slide).on(CLICK_EVENTS, function (e) {\r\n        // Ignore a middle or right click.\r\n        if (!e.button || e.button === 0) {\r\n          moveSibling(index);\r\n        }\r\n      }, slide);\r\n      /*\r\n       * Subscribe keyup to handle Enter and Space key.\r\n       * Note that Array.includes is not supported by IE.\r\n       */\r\n\r\n      Splide.off('keyup', slide).on('keyup', function (e) {\r\n        if (TRIGGER_KEYS.indexOf(e.key) > -1) {\r\n          e.preventDefault();\r\n          moveSibling(index);\r\n        }\r\n      }, slide, {\r\n        passive: false\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * Move the sibling to the given index.\r\n   * Need to check \"IDLE\" status because slides can be moving by Drag component.\r\n   *\r\n   * @param {number} index - Target index.\r\n   */\r\n\r\n\r\n  function moveSibling(index) {\r\n    if (Splide.State.is(IDLE)) {\r\n      sibling.go(index);\r\n    }\r\n  }\r\n\r\n  return Sync;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/breakpoints/index.js\r\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * Interval time for throttle.\r\n *\r\n * @type {number}\r\n */\r\n\r\nvar THROTTLE = 50;\r\n/**\r\n * The component for updating options according to a current window width.\r\n *\r\n * @param {Splide} Splide - A Splide instance.\r\n *\r\n * @return {Object} - The component object.\r\n */\r\n\r\n/* harmony default export */ const breakpoints = (function (Splide) {\r\n  /**\r\n   * Store breakpoints.\r\n   *\r\n   * @type {Object|boolean}\r\n   */\r\n  var breakpoints = Splide.options.breakpoints;\r\n  /**\r\n   * The check function whose frequency of call is reduced.\r\n   *\r\n   * @type {Function}\r\n   */\r\n\r\n  var throttledCheck = throttle(check, THROTTLE);\r\n  /**\r\n   * Keep initial options.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var initialOptions;\r\n  /**\r\n   * An array containing objects of point and MediaQueryList.\r\n   *\r\n   * @type {Object[]}\r\n   */\r\n\r\n  var map = [];\r\n  /**\r\n   * Hold the previous breakpoint.\r\n   *\r\n   * @type {number|undefined}\r\n   */\r\n\r\n  var prevPoint;\r\n  /**\r\n   * Breakpoints component object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var Breakpoints = {\r\n    /**\r\n     * Required only when the breakpoints definition is provided and browser supports matchMedia.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    required: breakpoints && matchMedia,\r\n\r\n    /**\r\n     * Called when the component is mounted.\r\n     */\r\n    mount: function mount() {\r\n      map = Object.keys(breakpoints).sort(function (n, m) {\r\n        return +n - +m;\r\n      }).map(function (point) {\r\n        return {\r\n          point: point,\r\n          mql: matchMedia(\"(max-width:\" + point + \"px)\")\r\n        };\r\n      });\r\n      /*\r\n       * To keep monitoring resize event after destruction without \"completely\",\r\n       * use native addEventListener instead of Splide.on.\r\n       */\r\n\r\n      this.destroy(true);\r\n      addEventListener('resize', throttledCheck); // Keep initial options to apply them when no breakpoint matches.\r\n\r\n      initialOptions = Splide.options;\r\n      check();\r\n    },\r\n\r\n    /**\r\n     * Destroy.\r\n     *\r\n     * @param {boolean} completely - Whether to destroy Splide completely.\r\n     */\r\n    destroy: function destroy(completely) {\r\n      if (completely) {\r\n        removeEventListener('resize', throttledCheck);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Check the breakpoint.\r\n   */\r\n\r\n  function check() {\r\n    var point = getPoint();\r\n\r\n    if (point !== prevPoint) {\r\n      prevPoint = point;\r\n      var State = Splide.State;\r\n      var options = breakpoints[point] || initialOptions;\r\n      var destroy = options.destroy;\r\n\r\n      if (destroy) {\r\n        Splide.options = initialOptions;\r\n        Splide.destroy(destroy === 'completely');\r\n      } else {\r\n        if (State.is(DESTROYED)) {\r\n          Splide.mount();\r\n        }\r\n\r\n        Splide.options = options;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Return the breakpoint matching current window width.\r\n   * Note that Array.prototype.find is not supported by IE.\r\n   *\r\n   * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\r\n   */\r\n\r\n\r\n  function getPoint() {\r\n    var item = map.filter(function (item) {\r\n      return item.mql.matches;\r\n    })[0];\r\n    return item ? item.point : -1;\r\n  }\r\n\r\n  return Breakpoints;\r\n});\r\n;// CONCATENATED MODULE: ./src/js/components/index.js\r\n/**\r\n * Export components.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar COMPLETE = {\r\n  Options: options,\r\n  Breakpoints: breakpoints,\r\n  Controller: controller,\r\n  Elements: components_elements,\r\n  Track: track,\r\n  Clones: clones,\r\n  Layout: layout,\r\n  Drag: drag,\r\n  Click: click,\r\n  Autoplay: autoplay,\r\n  Cover: cover,\r\n  Arrows: arrows,\r\n  Pagination: pagination,\r\n  LazyLoad: lazyload,\r\n  Keyboard: keyboard,\r\n  Sync: sync,\r\n  A11y: a11y\r\n};\r\nvar LIGHT = {\r\n  Options: options,\r\n  Controller: controller,\r\n  Elements: components_elements,\r\n  Track: track,\r\n  Clones: clones,\r\n  Layout: layout,\r\n  Drag: drag,\r\n  Click: click,\r\n  Arrows: arrows,\r\n  Pagination: pagination,\r\n  A11y: a11y\r\n};\r\n;// CONCATENATED MODULE: ./build/module/module.js\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\n/**\r\n * Export Splide class for import.\r\n *\r\n * @author    Naotoshi Fujita\r\n * @copyright Naotoshi Fujita. All rights reserved.\r\n */\r\n\r\n\r\n/**\r\n * Export Splide class for import from other projects.\r\n */\r\n\r\nvar module_Splide = /*#__PURE__*/function (_Core) {\r\n  _inheritsLoose(Splide, _Core);\r\n\r\n  function Splide(root, options) {\r\n    return _Core.call(this, root, options, COMPLETE) || this;\r\n  }\r\n\r\n  return Splide;\r\n}(Splide);\r\n\r\n\r\n\r\n/***/ })\r\n\r\n/******/ \t});\r\n/************************************************************************/\r\n/******/ \t// The module cache\r\n/******/ \tvar __webpack_module_cache__ = {};\r\n/******/ \t\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\r\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\r\n/******/ \t\t\t// no module.id needed\r\n/******/ \t\t\t// no module.loaded needed\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/ \t\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\r\n/******/ \t\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t/* webpack/runtime/define property getters */\r\n/******/ \t(() => {\r\n/******/ \t\t// define getter functions for harmony exports\r\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\r\n/******/ \t\t\tfor(var key in definition) {\r\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\r\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\r\n/******/ \t\t\t\t}\r\n/******/ \t\t\t}\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\r\n/******/ \t(() => {\r\n/******/ \t\t__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)\r\n/******/ \t})();\r\n/******/ \t\r\n/******/ \t/* webpack/runtime/make namespace object */\r\n/******/ \t(() => {\r\n/******/ \t\t// define __esModule on exports\r\n/******/ \t\t__webpack_require__.r = (exports) => {\r\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t\t}\r\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t\t};\r\n/******/ \t})();\r\n/******/ \t\r\n/************************************************************************/\r\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\r\n/******/ \t// startup\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(311);\r\n/******/ })()\r\n;\r\n});","export function createFooter() {\r\n  let footer = document.getElementById(\"footer\");\r\n\r\n  footer.appendChild(createContactoContainer());\r\n  footer.appendChild(createSocialMenu());\r\n  footer.appendChild(formContainer());\r\n  footer.appendChild(copyrightContainer());\r\n}\r\n\r\nfunction copyrightContainer() {\r\n  let containerCopyright = document.createElement(\"div\");\r\n  containerCopyright.classList.add(\"copyrigth\");\r\n  let par = document.createElement(\"p\");\r\n  par.innerHTML = `2021 &copy; Diseñado y realizado por Anxela Redondo. Consultar `;\r\n  let enlaceReferences = document.createElement(\"a\");\r\n  enlaceReferences.textContent = \"fuentes del contenido\";\r\n  enlaceReferences.href = \"references.html\";\r\n\r\n  par.appendChild(enlaceReferences);\r\n  containerCopyright.appendChild(par);\r\n  return containerCopyright;\r\n}\r\nfunction formContainer() {\r\n  let containerForm = document.createElement(\"div\");\r\n  let form = document.createElement(\"form\");\r\n\r\n  form.appendChild(insertFormGroup(\"name\", \"Nombre\", \"text\", \"Nombre\", true));\r\n  form.appendChild(\r\n    insertFormGroup(\r\n      \"email\",\r\n      \"Correo electrónico\",\r\n      \"email\",\r\n      \"Correo electrónico\",\r\n      true\r\n    )\r\n  );\r\n  form.appendChild(\r\n    insertFormGroup(\r\n      \"mensaje\",\r\n      \"Mensaje\",\r\n      \"textarea\",\r\n      \"Escriba aquí su mensaje\",\r\n      true\r\n    )\r\n  );\r\n  form.appendChild(\r\n    insertFormGroup(\r\n      \"accept\",\r\n      \"He leído y acepto la política de privacidad\",\r\n      \"checkbox\",\r\n      \"\",\r\n      true\r\n    )\r\n  );\r\n  let buttonSubmit = document.createElement(\"input\");\r\n  buttonSubmit.type = \"submit\";\r\n  buttonSubmit.value = \"Enviar\";\r\n  form.appendChild(buttonSubmit);\r\n  containerForm.appendChild(form);\r\n  return containerForm;\r\n}\r\nfunction insertFormGroup(id, label, inputType, placeholder, required) {\r\n  let containerFormGourp = document.createElement(\"div\");\r\n  let labelEl = document.createElement(\"label\");\r\n  labelEl.for = id;\r\n  labelEl.textContent = label;\r\n\r\n  if (inputType === \"textarea\") {\r\n    let textarea = document.createElement(\"textarea\");\r\n    textarea.placeholder = placeholder;\r\n    textarea.required = required;\r\n    textarea.name = id;\r\n    textarea.id = id;\r\n    textarea.cols = 30;\r\n    textarea.rows = 10;\r\n    containerFormGourp.appendChild(labelEl);\r\n    containerFormGourp.appendChild(textarea);\r\n  } else {\r\n    let input = document.createElement(\"input\");\r\n    input.type = inputType;\r\n    input.id = id;\r\n    input.required = required;\r\n    if (inputType === \"checkbox\") {\r\n      input.value = id;\r\n      input.name = id;\r\n      containerFormGourp.appendChild(input);\r\n      containerFormGourp.appendChild(labelEl);\r\n    } else {\r\n      input.placeholder = placeholder;\r\n      containerFormGourp.appendChild(labelEl);\r\n      containerFormGourp.appendChild(input);\r\n    }\r\n  }\r\n\r\n  return containerFormGourp;\r\n}\r\n\r\nfunction createSocialMenu() {\r\n  let item, enlace, icon;\r\n  const containerSocial = document.createElement(\"div\");\r\n  const list = document.createElement(\"ul\");\r\n  const items = [\"facebook\", \"twitter\", \"instagram\", \"pinterest\", \"youtube\"];\r\n  items.forEach((i) => {\r\n    item = document.createElement(\"li\");\r\n    enlace = document.createElement(\"a\");\r\n    icon = document.createElement(\"i\");\r\n    let classes = [\"fa\", \"fa-2x\", \"fab\", `fa-${i}`, \"underline\"];\r\n    classes.map((classItem) => icon.classList.add(classItem));\r\n    enlace.appendChild(icon);\r\n    item.appendChild(enlace);\r\n    list.appendChild(item);\r\n  });\r\n  containerSocial.appendChild(list);\r\n  return containerSocial;\r\n}\r\nfunction createContactoContainer() {\r\n  let containerContacto = document.createElement(\"div\");\r\n  containerContacto.id = \"contacto\";\r\n  let titulo = document.createElement(\"h2\");\r\n  titulo.textContent = \"Contacta con nosotras\";\r\n  let paragraph = document.createElement(\"p\");\r\n  paragraph.textContent = `Conoce más nuestras gastronomía y forma parte de ella, contacta con\r\n    nosotras si te gustaría participar en este nueva forma de ver tu\r\n    comida.`;\r\n\r\n  let svgLogo = document.createElement(\"div\");\r\n  svgLogo.innerHTML = createSVG();\r\n\r\n  containerContacto.appendChild(titulo);\r\n  containerContacto.appendChild(paragraph);\r\n  containerContacto.appendChild(svgLogo);\r\n  return containerContacto;\r\n}\r\n\r\nfunction createSVG() {\r\n  return `<svg viewBox=\"-1 -1 85 75\" height=\"100\" class=\"logo\">\r\n      <defs>\r\n        <polyline id=\"contornohoja\" points=\"10,40 0,30 0,10 10,0 20,10 20,30 10,40 10,50 10,0\"></polyline>\r\n        <line id=\"left\" x1=\"10\" y1=\"10\" x2=\"0\" y2=\"0\"></line>\r\n        <line id=\"right\" x1=\"0\" y1=\"10\" x2=\"10\" y2=\"0\"></line>\r\n      </defs>\r\n      <g stroke=\"#000\" stroke-width=\"3\" fill=\"transparent\">\r\n        <use xlink:href=\"#left\" x=\"0\" y=\"20\" />\r\n        <use xlink:href=\"#left\" x=\"0\" y=\"27.5\" />\r\n        <use xlink:href=\"#right\" x=\"10\" y=\"20\" />\r\n        <use xlink:href=\"#right\" x=\"10\" y=\"32.5\" />\r\n        <use xlink:href=\"#contornohoja\" x=\"0\" y=\"10\" />\r\n      \r\n        <line x1=\"30\" y1=\"15\" x2=\"22.25\" y2=\"7.5\"></line>\r\n        <use xlink:href=\"#left\" x=\"20\" y=\"22.5\" />\r\n        <use xlink:href=\"#right\" x=\"30\" y=\"10\" />\r\n        <use xlink:href=\"#right\" x=\"30\" y=\"22.5\" />\r\n        <use xlink:href=\"#contornohoja\" x=\"20\" y=\"0\" />\r\n      \r\n        <line x1=\"50\" y1=\"30\" x2=\"45\" y2=\"25\"></line>\r\n        <use xlink:href=\"#left\" x=\"40\" y=\"30\" />\r\n        <use xlink:href=\"#left\" x=\"40\" y=\"40\" />\r\n        <line x1=\"50\" y1=\"35\" x2=\"57.5\" y2=\"27.5\"></line>\r\n        <use xlink:href=\"#right\" x=\"50\" y=\"40\" />\r\n        <use xlink:href=\"#contornohoja\" x=\"40\" y=\"20\" />\r\n      \r\n        <use xlink:href=\"#left\" x=\"60\" y=\"30\" />\r\n        <use xlink:href=\"#left\" x=\"60\" y=\"37.5\" />\r\n        <line x1=\"70\" y1=\"30\" x2=\"75\" y2=\"25\"></line>\r\n        <use xlink:href=\"#right\" x=\"70\" y=\"30\" />\r\n        <use xlink:href=\"#right\" x=\"70\" y=\"40\" />\r\n        <use xlink:href=\"#right\" x=\"70\" y=\"40\" />\r\n        <use xlink:href=\"#contornohoja\" x=\"60\" y=\"20\" />\r\n      </g>\r\n      </svg>`;\r\n}\r\n","export function createNavbar() {\r\n  let enlace = document.createElement(\"a\");\r\n  enlace.href = \"index.html\";\r\n\r\n  let svgLogo = document.createElement(\"div\");\r\n  svgLogo.innerHTML = createSVG();\r\n\r\n  let pageTitle = document.createElement(\"h1\");\r\n  pageTitle.textContent = \"Gastornomia Novoa\";\r\n\r\n  let nav = document.createElement(\"nav\");\r\n\r\n  let input = document.createElement(\"input\");\r\n  input.type = \"checkbox\";\r\n  input.id = \"menu-mobile\";\r\n  let enlaceMenu = document.createElement(\"a\");\r\n  enlaceMenu.onclick = () => {\r\n    document.querySelector(\"#menu-mobile\").checked =\r\n      !document.querySelector(\"#menu-mobile\").checked;\r\n  };\r\n\r\n  let lista = document.createElement(\"ul\");\r\n\r\n  lista.appendChild(createItemList(\"category-mar.html\", \"Protege el mar\"));\r\n  lista.appendChild(createItemList(\"category-tierra.html\", \"Cuida la tierra\"));\r\n  lista.appendChild(createItemList(\"conocenos.html\", \"Conócenos\"));\r\n\r\n  enlace.append(svgLogo);\r\n  enlace.append(pageTitle);\r\n\r\n  nav.appendChild(input);\r\n  nav.appendChild(enlaceMenu);\r\n  nav.appendChild(lista);\r\n\r\n  document.getElementById(\"header\").append(enlace);\r\n  document.getElementById(\"header\").append(nav);\r\n}\r\n\r\nfunction createItemList(ref, name) {\r\n  let item = document.createElement(\"li\");\r\n  let enlace = document.createElement(\"a\");\r\n  enlace.href = ref;\r\n  enlace.textContent = name;\r\n  if (\r\n    ref.includes(\"-\")\r\n      ? document.documentURI.includes(ref.split(\"-\")[1])\r\n      : document.documentURI.includes(ref)\r\n  ) {\r\n    item.classList.add(\"selected\");\r\n  }\r\n  item.appendChild(enlace);\r\n  return item;\r\n}\r\n\r\nfunction createSVG() {\r\n  return `<svg viewBox=\"-1 -1 85 75\" height=\"50\" class=\"logo\">\r\n    <defs>\r\n      <polyline id=\"contornohoja\" points=\"10,40 0,30 0,10 10,0 20,10 20,30 10,40 10,50 10,0\"></polyline>\r\n      <line id=\"left\" x1=\"10\" y1=\"10\" x2=\"0\" y2=\"0\"></line>\r\n      <line id=\"right\" x1=\"0\" y1=\"10\" x2=\"10\" y2=\"0\"></line>\r\n    </defs>\r\n    <g stroke=\"#fff\" stroke-width=\"3\" fill=\"transparent\">\r\n      <use xlink:href=\"#left\" x=\"0\" y=\"20\" />\r\n      <use xlink:href=\"#left\" x=\"0\" y=\"27.5\" />\r\n      <use xlink:href=\"#right\" x=\"10\" y=\"20\" />\r\n      <use xlink:href=\"#right\" x=\"10\" y=\"32.5\" />\r\n      <use xlink:href=\"#contornohoja\" x=\"0\" y=\"10\" />\r\n    \r\n      <line x1=\"30\" y1=\"15\" x2=\"22.25\" y2=\"7.5\"></line>\r\n      <use xlink:href=\"#left\" x=\"20\" y=\"22.5\" />\r\n      <use xlink:href=\"#right\" x=\"30\" y=\"10\" />\r\n      <use xlink:href=\"#right\" x=\"30\" y=\"22.5\" />\r\n      <use xlink:href=\"#contornohoja\" x=\"20\" y=\"0\" />\r\n    \r\n      <line x1=\"50\" y1=\"30\" x2=\"45\" y2=\"25\"></line>\r\n      <use xlink:href=\"#left\" x=\"40\" y=\"30\" />\r\n      <use xlink:href=\"#left\" x=\"40\" y=\"40\" />\r\n      <line x1=\"50\" y1=\"35\" x2=\"57.5\" y2=\"27.5\"></line>\r\n      <use xlink:href=\"#right\" x=\"50\" y=\"40\" />\r\n      <use xlink:href=\"#contornohoja\" x=\"40\" y=\"20\" />\r\n    \r\n      <use xlink:href=\"#left\" x=\"60\" y=\"30\" />\r\n      <use xlink:href=\"#left\" x=\"60\" y=\"37.5\" />\r\n      <line x1=\"70\" y1=\"30\" x2=\"75\" y2=\"25\"></line>\r\n      <use xlink:href=\"#right\" x=\"70\" y=\"30\" />\r\n      <use xlink:href=\"#right\" x=\"70\" y=\"40\" />\r\n      <use xlink:href=\"#right\" x=\"70\" y=\"40\" />\r\n      <use xlink:href=\"#contornohoja\" x=\"60\" y=\"20\" />\r\n    </g>\r\n    </svg>`;\r\n}\r\n","import AOS from \"./node_modules/aos\";\r\nimport Splide from \"./node_modules/@splidejs/splide\";\r\nimport { createFooter } from \"./footer\";\r\nimport { createNavbar } from \"./navbar\";\r\n\r\nfunction checkPosition() {\r\n  let logos = document.getElementsByClassName(\"logo\");\r\n  if (logos.length) {\r\n    for (let logo of logos) {\r\n      let positionFromTop = logo.getBoundingClientRect().top;\r\n      if (positionFromTop - window.innerHeight <= 0) {\r\n        logo.classList.add(\"logo-animation\");\r\n      } else {\r\n        logo.classList.remove(\"logo-animation\");\r\n      }\r\n    }\r\n  }\r\n  let categorias = document.getElementsByClassName(\"categoria\");\r\n  if (categorias.length) {\r\n    for (let cat of categorias) {\r\n      let positionFromTop = cat.getBoundingClientRect().top;\r\n      if (positionFromTop - window.innerHeight <= 0) {\r\n        cat.classList.add(\"categoria-animation\");\r\n      } else {\r\n        cat.classList.remove(\"categoria-animation\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createPaginatorMar() {\r\n  let offsetMarList, countMarList;\r\n  const marList = document.querySelector(\"#mar-category-list\");\r\n  const seeMoreMarBtn = document.querySelector(\"#seeMoreMarBtn\");\r\n  const offsetMarListEl = document.querySelector(\"#offsetMarList\");\r\n  const countMarListEl = document.querySelector(\"#countMarList\");\r\n\r\n  offsetMarList = 10;\r\n  if (marList) {\r\n    countMarList = marList.children.length;\r\n    offsetMarListEl.textContent = offsetMarList;\r\n    countMarListEl.textContent = countMarList;\r\n  }\r\n\r\n  if (seeMoreMarBtn) {\r\n    seeMoreMarBtn.addEventListener(\"click\", () => {\r\n      if (marList) {\r\n        let top =\r\n          offsetMarList + 6 < countMarList ? offsetMarList + 6 : countMarList;\r\n        for (let i = offsetMarList; i < top; i++) {\r\n          const item = marList.children.item(i);\r\n          if (item) item.style.display = \"inherit\";\r\n        }\r\n        offsetMarList = top;\r\n        if (offsetMarList === countMarList) {\r\n          seeMoreMarBtn.disabled = true;\r\n        }\r\n        offsetMarListEl.textContent = offsetMarList;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction createPaginatorTierra() {\r\n  let offsetTierraList, countTierraList;\r\n\r\n  const tierraList = document.querySelector(\"#tierra-category-list\");\r\n  const seeMoreTierraBtn = document.querySelector(\"#seeMoreTierraBtn\");\r\n  const offsetTierraListEl = document.querySelector(\"#offsetTierraList\");\r\n  const countTierraListEl = document.querySelector(\"#countTierraList\");\r\n\r\n  offsetTierraList = 10;\r\n\r\n  if (tierraList) {\r\n    countTierraList = tierraList.children.length;\r\n    offsetTierraListEl.textContent = offsetTierraList;\r\n    countTierraListEl.textContent = countTierraList;\r\n  }\r\n\r\n  if (seeMoreTierraBtn) {\r\n    seeMoreTierraBtn.addEventListener(\"click\", () => {\r\n      if (tierraList) {\r\n        let top =\r\n          offsetTierraList + 6 < countTierraList\r\n            ? offsetTierraList + 6\r\n            : countTierraList;\r\n        for (let i = offsetTierraList; i < top; i++) {\r\n          const item = tierraList.children.item(i);\r\n          if (item) item.style.display = \"inherit\";\r\n        }\r\n        offsetTierraList = top;\r\n        if (offsetTierraList === countTierraList) {\r\n          seeMoreTierraBtn.disabled = true;\r\n        }\r\n        offsetTierraListEl.textContent = offsetTierraList;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"scroll\", checkPosition);\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  createFooter();\r\n  createNavbar();\r\n\r\n  checkPosition();\r\n\r\n  AOS.init();\r\n\r\n  createPaginatorMar();\r\n  createPaginatorTierra();\r\n\r\n  if (document.querySelector(\".splide\")) {\r\n    new Splide(\".splide\", {\r\n      type: \"loop\",\r\n      perPage: Math.floor(document.querySelector(\"body\").clientWidth / 350),\r\n      height: \"9rem\",\r\n      cover: true,\r\n      breakpoins: {\r\n        640: {\r\n          height: \"6rem\",\r\n        },\r\n      },\r\n      gap: \"1rem\",\r\n    }).mount();\r\n  }\r\n});\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\r\n\r\nvar OldModule = module.bundle.Module;\r\n\r\nfunction Module(moduleName) {\r\n  OldModule.call(this, moduleName);\r\n  this.hot = {\r\n    data: module.bundle.hotData,\r\n    _acceptCallbacks: [],\r\n    _disposeCallbacks: [],\r\n    accept: function (fn) {\r\n      this._acceptCallbacks.push(fn || function () {});\r\n    },\r\n    dispose: function (fn) {\r\n      this._disposeCallbacks.push(fn);\r\n    }\r\n  };\r\n\r\n  module.bundle.hotData = null;\r\n}\r\n\r\nmodule.bundle.Module = Module;\r\nvar checkedAssets, assetsToAccept;\r\n\r\nvar parent = module.bundle.parent;\r\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\r\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\r\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\r\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\r\n  ws.onmessage = function(event) {\r\n    checkedAssets = {};\r\n    assetsToAccept = [];\r\n\r\n    var data = JSON.parse(event.data);\r\n\r\n    if (data.type === 'update') {\r\n      var handled = false;\r\n      data.assets.forEach(function(asset) {\r\n        if (!asset.isNew) {\r\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\r\n          if (didAccept) {\r\n            handled = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      // Enable HMR for CSS by default.\r\n      handled = handled || data.assets.every(function(asset) {\r\n        return asset.type === 'css' && asset.generated.js;\r\n      });\r\n\r\n      if (handled) {\r\n        console.clear();\r\n\r\n        data.assets.forEach(function (asset) {\r\n          hmrApply(global.parcelRequire, asset);\r\n        });\r\n\r\n        assetsToAccept.forEach(function (v) {\r\n          hmrAcceptRun(v[0], v[1]);\r\n        });\r\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\r\n        location.reload();\r\n      }\r\n    }\r\n\r\n    if (data.type === 'reload') {\r\n      ws.close();\r\n      ws.onclose = function () {\r\n        location.reload();\r\n      }\r\n    }\r\n\r\n    if (data.type === 'error-resolved') {\r\n      console.log('[parcel] ✨ Error resolved');\r\n\r\n      removeErrorOverlay();\r\n    }\r\n\r\n    if (data.type === 'error') {\r\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\r\n\r\n      removeErrorOverlay();\r\n\r\n      var overlay = createErrorOverlay(data);\r\n      document.body.appendChild(overlay);\r\n    }\r\n  };\r\n}\r\n\r\nfunction removeErrorOverlay() {\r\n  var overlay = document.getElementById(OVERLAY_ID);\r\n  if (overlay) {\r\n    overlay.remove();\r\n  }\r\n}\r\n\r\nfunction createErrorOverlay(data) {\r\n  var overlay = document.createElement('div');\r\n  overlay.id = OVERLAY_ID;\r\n\r\n  // html encode message and stack trace\r\n  var message = document.createElement('div');\r\n  var stackTrace = document.createElement('pre');\r\n  message.innerText = data.error.message;\r\n  stackTrace.innerText = data.error.stack;\r\n\r\n  overlay.innerHTML = (\r\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\r\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\r\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\r\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\r\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\r\n    '</div>'\r\n  );\r\n\r\n  return overlay;\r\n\r\n}\r\n\r\nfunction getParents(bundle, id) {\r\n  var modules = bundle.modules;\r\n  if (!modules) {\r\n    return [];\r\n  }\r\n\r\n  var parents = [];\r\n  var k, d, dep;\r\n\r\n  for (k in modules) {\r\n    for (d in modules[k][1]) {\r\n      dep = modules[k][1][d];\r\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\r\n        parents.push(k);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (bundle.parent) {\r\n    parents = parents.concat(getParents(bundle.parent, id));\r\n  }\r\n\r\n  return parents;\r\n}\r\n\r\nfunction hmrApply(bundle, asset) {\r\n  var modules = bundle.modules;\r\n  if (!modules) {\r\n    return;\r\n  }\r\n\r\n  if (modules[asset.id] || !bundle.parent) {\r\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\r\n    asset.isNew = !modules[asset.id];\r\n    modules[asset.id] = [fn, asset.deps];\r\n  } else if (bundle.parent) {\r\n    hmrApply(bundle.parent, asset);\r\n  }\r\n}\r\n\r\nfunction hmrAcceptCheck(bundle, id) {\r\n  var modules = bundle.modules;\r\n  if (!modules) {\r\n    return;\r\n  }\r\n\r\n  if (!modules[id] && bundle.parent) {\r\n    return hmrAcceptCheck(bundle.parent, id);\r\n  }\r\n\r\n  if (checkedAssets[id]) {\r\n    return;\r\n  }\r\n  checkedAssets[id] = true;\r\n\r\n  var cached = bundle.cache[id];\r\n\r\n  assetsToAccept.push([bundle, id]);\r\n\r\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\r\n    return true;\r\n  }\r\n\r\n  return getParents(global.parcelRequire, id).some(function (id) {\r\n    return hmrAcceptCheck(global.parcelRequire, id)\r\n  });\r\n}\r\n\r\nfunction hmrAcceptRun(bundle, id) {\r\n  var cached = bundle.cache[id];\r\n  bundle.hotData = {};\r\n  if (cached) {\r\n    cached.hot.data = bundle.hotData;\r\n  }\r\n\r\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\r\n    cached.hot._disposeCallbacks.forEach(function (cb) {\r\n      cb(bundle.hotData);\r\n    });\r\n  }\r\n\r\n  delete bundle.cache[id];\r\n  bundle(id);\r\n\r\n  cached = bundle.cache[id];\r\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\r\n    cached.hot._acceptCallbacks.forEach(function (cb) {\r\n      cb();\r\n    });\r\n    return true;\r\n  }\r\n}\r\n"]}